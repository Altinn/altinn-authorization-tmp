@page "/areas"
@inject IAreaService areaService

<PageTitle>Områder</PageTitle>

<PageHeader>
    <LeftContent>
        <BreadcrumbContainer>
            <BreadcrumbItem Url=@($"/areas")>Areas</BreadcrumbItem>
        </BreadcrumbContainer>
        <H1>Fullmaktsområder</H1>
    </LeftContent>
    <RightContent>
        <Switch @bind-Checked=GroupByGroups>Fordel i grupper</Switch>
    </RightContent>
</PageHeader>

@if(Areas != null)
{
    @if (GroupByGroups)
    {
        @foreach(var grp in Groups.OrderBy(t=>t.Name))
        {
            <div>
                <H2>@grp.Name</H2>
                <em><a href=@($"/areagroup/{grp.Id}")><Icon Name="arrow-up-right-from-square"></Icon></a> @grp.Description</em>
                    <table class="bf-table bfc-base-3-bg" style="margin-bottom: 12px;">
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            <th>Name</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var area in Areas.Where(t=>t.GroupId == grp.Id).OrderBy(t => t.Name))
                        {
                            <tr class="bf-table-row bf-table-row-compact">
                                <td>
                                    <Styx.Visual.SvgIcon Path="@area.IconName" Small />
                                </td>
                                <td>
                                    <a href=@($"/area/{area.Id}")>@area.Name</a>
                                </td>
                                <td>@area.Description</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
    else
    {
        <div>
            <table class="bf-table bfc-base-3-bg">
                <thead>
                    <tr>
                        <th>Icon</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Group</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var area in Areas.OrderBy(t=>t.Group.Name).ThenBy(t=>t.Name))
                    {
                        <tr class="bf-table-row bf-table-row-compact" style="margin-bottom: 12px;">
                            <td>
                                <Styx.Visual.SvgIcon Path="@area.IconName" Small />
                            </td>
                            <td>
                                <a href=@($"/area/{area.Id}")>@area.Name</a>
                            </td>
                            <td>@area.Description</td>
                            <td>
                                <a href=@($"/areagroup/{area.Group.Id}")>@area.Group.Name</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}


@code {

    public List<AreaGroup> Groups { get; set; }
    public List<ExtArea> Areas { get; set; }

    public bool GroupByGroups { get; set; } = false;

    protected async override Task OnParametersSetAsync()
    {
        var opt = UserData.GetRequestOptions();
        Areas = [.. await areaService.GetExtended(options: opt)];
        Groups = Areas.Select(t => t.Group).DistinctBy(t=>t.Id).ToList();
    }

}
