<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Altinn.Platform.Authorization</name>
    </assembly>
    <members>
        <member name="T:Altinn.Platform.Authorization.Clients.EventsQueueClient">
            <summary>
            Implementation of the <see ref="IEventsQueueClient"/> using Azure Storage Queues.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.EventsQueueClient.#ctor(Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.QueueStorageSettings},Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Clients.EventsQueueClient})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Clients.EventsQueueClient"/> class.
            </summary>
            <param name="settings">The queue storage settings</param>
            <param name="logger">the logger handler</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.EventsQueueClient.EnqueueAuthorizationEvent(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.Interfaces.IEventsQueueClient">
            <summary>
            Describes the necessary methods for an implementation of an events queue client.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.Interfaces.IEventsQueueClient.EnqueueAuthorizationEvent(System.String)">
            <summary>
            Enqueues the provided content to the Event Log queue
            </summary>
            <param name="content">The content to push to the queue in string format</param>
            <returns>Returns a queue receipt</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.OedAuthzClient">
            <summary>
            Client configuration for Oed Authz API integration
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.OedAuthzClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.OedAuthzClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes the http client for retrieving Oed Authz role-assignments
            </summary>
            <param name="client">the http client</param>
            <param name="settings">the general settings configured for the authorization component</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.OedAuthzClient.GetOedRoleAssignments(System.Net.Http.StringContent,System.Net.Http.Headers.AuthenticationHeaderValue)">
            <summary>
            post request that gets OED roleassignments
            </summary>
            <param name="requestBody">the request body</param>
            <param name="token">the bearer token</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.OedAuthzMaskinportenClientDefinition">
            <summary>
            Maskinporten client definition for OED Authz API integration
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.OedAuthzMaskinportenClientDefinition.ClientSettings">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.OedAuthzMaskinportenClientDefinition.#ctor(Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Clients.OedAuthzMaskinportenClientDefinition"/> class
            </summary>
            <param name="clientSettings">Maskinporten client settings</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.OedAuthzMaskinportenClientDefinition.GetClientSecrets">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.PartyClient">
            <summary>
            Client configuration for actor api
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.PartyClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.PartyClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes the http client for actor
            </summary>
            <param name="client">the http client</param>
            <param name="generalSettings">the general settings configured for the authorization component</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.ProfileClient">
            <summary>
            Client configuration for profile api
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.ProfileClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.ProfileClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.PlatformSettings})">
            <summary>
            Initializes the http client for actor
            </summary>
            <param name="client">the http client</param>
            <param name="platformSettings">the platform settings configured for the authorization component</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.ResourceRegistryClient">
            <summary>
            Client configuration for resource registry
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.ResourceRegistryClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.ResourceRegistryClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.PlatformSettings})">
            <summary>
            Initializes the http client for actor
            </summary>
            <param name="client">the http client</param>
            <param name="platformSettings">the platform settings configured for the authorization component</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.RolesClient">
            <summary>
            Client configuration for roles api
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.RolesClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.RolesClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes the http client for roles
            </summary>
            <param name="client">the http client</param>
            <param name="settings">the general settings configured for the authorization component</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Clients.SBLClient">
            <summary>
            Client configuration for actor api
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Clients.SBLClient.Client">
            <summary>
            Gets an instance of httpclient from httpclientfactory
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Clients.SBLClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes the http client for actor
            </summary>
            <param name="client">the http client</param>
            <param name="generalSettings">the general settings configured for the authorization component</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings">
            <summary>
            Settings for Azure cosmos database
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings.EndpointUri">
            <summary>
            end point url for the cosmos database
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings.PrimaryKey">
            <summary>
            primary key used for authenticating the cosmos database
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings.Database">
            <summary>
            name of the database in the given end point
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings.InstanceCollection">
            <summary>
            name of the instance collection in the given database
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureCosmosSettings.ApplicationCollection">
            <summary>
            name of the applications collection in the given database
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration">
            <summary>
            Settings for Azure storage
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.MetadataAccountName">
            <summary>
            The storage account name for Metadata
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.MetadataAccountKey">
            <summary>
            The storage account key for Metadata
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.MetadataContainer">
            <summary>
            The name of the storage container in the Metadata storage account
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.MetadataBlobEndpoint">
            <summary>
            The url for the blob end point for Metadata
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationsAccountName">
            <summary>
            The storage account name for Delegations
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationsAccountKey">
            <summary>
            The storage account key for Delegations
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationsContainer">
            <summary>
            The name of the storage container in the Delegations storage account
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationsBlobEndpoint">
            <summary>
            The url for the blob end point for Delegations
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.BlobLeaseTimeout">
            <summary>
            The blob lease timeout value in seconds
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationEventQueueEndpoint">
            <summary>
            The endpoint url for the storage account for delegation event queue
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationEventQueueAccountName">
            <summary>
            The storage account name for delegation event queue
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration.DelegationEventQueueAccountKey">
            <summary>
            The account key for the storage account for delegation event queue
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.ConsoleTraceService">
            <summary>
            Copied from sample project.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.IsDebugEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.IsTraceSensitiveData">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.IsTraceToFile">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.IsTraceToDirectory">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.TraceDirectory">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.Info(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.Error(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.Debug(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.Success(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Configuration.ConsoleTraceService.Warn(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.FeatureFlags">
            <summary>
            Feature flags 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Configuration.FeatureFlags.AuditLog">
            <summary>
            audit log flag
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.GeneralSettings">
            <summary>
            General configuration settings
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.BridgeApiEndpoint">
            <summary>
            Gets or sets the bridge api endpoint
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.GetBridgeApiEndpoint">
            <summary>
            Gets the bridge api endpoint from kubernetes environment variables and appsettings if environment variable is not set
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.SBLBaseAdress">
            <summary>
            Gets or sets the SBL base adress
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.RoleCacheTimeout">
            <summary>
            Gets or sets the cache timeout
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.MainUnitCacheTimeout">
            <summary>
            Gets or sets the cache timeout for lookup of mainunits
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.KeyrolePartyIdsCacheTimeout">
            <summary>
            Gets or sets the cache timeout for lookup of keyrole partyIds
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.PolicyCacheTimeout">
            <summary>
            Gets or sets the cache timeout
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.RuntimeCookieName">
            <summary>
            Name of the cookie for runtime
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.OpenIdWellKnownEndpoint">
            <summary>
            Open Id Connect Well known endpoint. Related to JSON WEB token validation.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.OedAuthzApiEndpoint">
            <summary>
            Gets or sets the OED api endpoint
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.GetSBLBaseAdress">
            <summary>
            Gets the SBL base adress from kubernetes environment variables and appsettings if environment variable is not set
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.GeneralSettings.UseStorageApiForInstanceAuthInfo">
            <summary>
            Gets or sets a value indicating whether to use the storage component to get instance auth info
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings">
            <summary>
            Configuration for Maskinporten Client for Oed role-assignments API integration
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.Environment">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.ClientId">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.Scope">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.EncodedJwk">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.Resource">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.CertificatePkcs12Path">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.CertificatePkcs12Password">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.CertificateStoreThumbprint">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.EncodedX509">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.ConsumerOrgNo">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.EnterpriseUserName">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.EnterpriseUserPassword">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.ExhangeToAltinnToken">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.TokenExchangeEnvironment">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.UseAltinnTestOrg">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.EnableDebugLogging">
            <inheritdoc/>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings.OverwriteAuthorizationHeader">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.PlatformSettings">
            <summary>
            Represents a set of configuration options when communicating with the platform API.
            Instances of this class is initialised with values from app settings. Some values can be overridden by environment variables.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.ApiStorageEndpoint">
            <summary>
            Gets or sets the url for the Storage API endpoint.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.ApiRegisterEndpoint">
            <summary>
            Gets or sets the url for the Register API endpoint.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.ApiProfileEndpoint">
            <summary>
            Gets or sets the url for the Profile API endpoint
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.ApiResourceRegistryEndpoint">
            <summary>
            Gets or sets the url for the Resource Registry API endpoint
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.AppsDomain">
            <summary>
            Gets or sets the apps domain used to match events source
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PlatformSettings.SubscriptionCachingLifetimeInSeconds">
            <summary>
            The lifetime to cache subscriptions
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.PostgreSQLSettings">
            <summary>
            Settings for Postgres database
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PostgreSQLSettings.ConnectionString">
            <summary>
            Connection string for the postgres db
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.PostgreSQLSettings.AuthorizationDbPwd">
            <summary>
            Password for app user for the postgres db
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Configuration.QueueStorageSettings">
            <summary>
            Configuration object used to hold settings for the queue storage.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.QueueStorageSettings.EventLogConnectionString">
            <summary>
            ConnectionString for the storage account
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Configuration.QueueStorageSettings.AuthorizationEventQueueName">
            <summary>
            Name of the queue to push authentication event, before persisting to db.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants">
            <summary>
            Altinn specific XACML constants used for urn identifiers and attributes
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.Prefixes">
            <summary>
            Altinn specific prefixes
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.Prefixes.PolicyId">
            <summary>
            The Policy Id prefix.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.Prefixes.ObligationId">
            <summary>
            The Obligation Id prefix.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.Prefixes.ObligationAssignmentid">
            <summary>
            The Obligation Assignment Id prefix.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers">
            <summary>
            Match attribute identifiers
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.OrgAttribute">
            <summary>
            Org attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.OrgNumberAttribute">
            <summary>
            Org number attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.AppAttribute">
            <summary>
            App attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.ResourceRegistry">
            <summary>
            Resource registry match identifer
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.InstanceAttribute">
            <summary>
            Instance attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.AppResourceAttribute">
            <summary>
            App resource attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.TaskAttribute">
            <summary>
            Task attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.EndEventAttribute">
            <summary>
            End-event attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.PartyAttribute">
            <summary>
            Party Id attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.UserAttribute">
            <summary>
            User Id attribute match indentifier 
            </summary>>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.RoleAttribute">
            <summary>
            Role Code attribute match indentifier 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeIdentifiers.OedRoleAttribute">
            <summary>
            Digitalt D�dsbo Role Code Attribute match identifier
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeCategory">
            <summary>
            Attribute categories.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeCategory.MinimumAuthenticationLevel">
            <summary>
            The minimum authentication level category.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AltinnXacmlConstants.MatchAttributeCategory.MinimumAuthenticationLevelOrg">
            <summary>
            The minimum authentication level for organization category
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.AuthzConstants">
            <summary>
            Constants related to authorization.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AuthzConstants.POLICY_STUDIO_DESIGNER">
            <summary>
            Policy tag for authorizing designer access
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AuthzConstants.ALTINNII_AUTHORIZATION">
            <summary>
            Policy tag for authorizing Altinn.Platform.Authorization API access from AltinnII Authorization
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.AuthzConstants.DELEGATIONEVENT_FUNCTION_AUTHORIZATION">
            <summary>
            Policy tag for authorizing Altinn.Platform.Authorization API access from the DelegationEvent Azure function
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute">
            <summary>
            Attribute representations in XACML
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.OrgAttribute">
            <summary>
            xacml string that represents org
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.AppAttribute">
            <summary>
            xacml string that represents app
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.InstanceAttribute">
            <summary>
            xacml string that represents instanceid
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.AppResourceAttribute">
            <summary>
            xacm string that represents appresource
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.TaskAttribute">
            <summary>
            xacml string that represents task
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.EndEventAttribute">
            <summary>
            xacml string that represents end event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.PartyAttribute">
            <summary>
            xacml string that represents party
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.OrganizationNumberAttribute">
            <summary>
            xacml string that represents organization number 
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.UserAttribute">
            <summary>
            xacml string that represents user
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.RoleAttribute">
            <summary>
            xacml string that represents role
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.OedRoleAttribute">
            <summary>
            Digitalt D�dsbo Role Code Attribute match identifier
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Constants.XacmlRequestAttribute.ResourceRegistryAttribute">
            <summary>
            xacml string that represents resource
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.DecisionController">
            <summary>
            This is the controller responsible for Policy Enformcent Point endpoint.
            It returns a Xacml Context Reponse based on a Context Request
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DecisionController.#ctor(Altinn.Authorization.ABAC.Interface.IContextHandler,Altinn.Authorization.ABAC.Interface.IDelegationContextHandler,Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint,Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Controllers.DecisionController},Microsoft.Extensions.Caching.Memory.IMemoryCache,Altinn.Platform.Authorization.Services.Interfaces.IEventLog,Microsoft.FeatureManagement.IFeatureManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Controllers.DecisionController"/> class.
            </summary>
            <param name="contextHandler">The Context handler</param>
            <param name="delegationContextHandler">The delegation context handler</param>
            <param name="policyRetrievalPoint">The policy Retrieval point</param>
            <param name="delegationRepository">The delegation repository</param>
            <param name="logger">the logger.</param>
            <param name="memoryCache">memory cache</param>
            <param name="eventLog">the authorization event logger</param>
            <param name="featureManager">the feature manager</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DecisionController.Post(Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModel)">
            <summary>
            Decision Point endpoint to authorize Xacml Context Requests
            </summary>
            <param name="model">A Generic model</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.DelegationsController">
            <summary>
            Controller responsible for all operations for managing delegations of Altinn Apps
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.#ctor(Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint,Altinn.Platform.Authorization.Services.Interface.IPolicyInformationPoint,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Controllers.DelegationsController})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Controllers.DelegationsController"/> class.
            </summary>
            <param name="policyAdministrationPoint">The policy administration point</param>
            <param name="policyInformationPoint">The policy information point</param>
            <param name="logger">the logger.</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.Post(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule})">
            <summary>
            Endpoint for adding one or more rules for the given app/offeredby/coveredby. This updates or creates a new delegated policy of type "DirectlyDelegated". DelegatedByUserId is included to store history information in 3.0.
            </summary>
            <param name="rules">All rules to be delegated</param>
            <response code="201" cref="T:System.Collections.Generic.List`1">Created</response>
            <response code="206" cref="T:System.Collections.Generic.List`1">Partial Content</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.GetRules(Altinn.Platform.Authorization.Models.RuleQuery,System.Boolean)">
            <summary>
            Endpoint for retrieving delegated rules between parties
            </summary>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.DeleteRule(Altinn.Platform.Authorization.Models.RequestToDeleteRuleList)">
            <summary>
            Endpoint for deleting delegated rules between parties
            </summary>
            <response code="200" cref="T:System.Collections.Generic.List`1">Deleted</response>
            <response code="206" cref="T:System.Collections.Generic.List`1">Partial Content</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.DeletePolicy(Altinn.Platform.Authorization.Models.RequestToDeletePolicyList)">
            <summary>
            Endpoint for deleting an entire delegated policy between parties
            </summary>
            <response code="200" cref="T:System.Collections.Generic.List`1">Deleted</response>
            <response code="206" cref="T:System.Collections.Generic.List`1">Partial Content</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.ReplayDelegationEvents(System.Int32,System.Int32)">
            <summary>
            Endpoint for triggering a replay of delegationchange events pushing them to the delegationevents queue for syncronization with Altinn 2.0
            </summary>
            <param name="startId">The first id in the range to replay</param>
            <param name="endId">The last id in the range to replay. If left/set to 0 all events found after the startId will be replayed</param>
            <response code="200">OK</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.DelegationsController.Get">
            <summary>
            Test method. Should be deleted?
            </summary>
            <returns>test string</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.ErrorController">
            <summary>
            Handles the presentation of unhandled exceptions during the execution of a request.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.ErrorController.Error">
            <summary>
            Create a response with a new <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with limited information.
            </summary>
            <remarks>
            This method cannot be called directly. It is used by the API framework as a way to output ProblemDetails
            if there has been an unhandled exception.
            </remarks>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> instance.</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.PartiesController">
            <summary>
            Contains all actions related to the party
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PartiesController.#ctor(Altinn.Platform.Authorization.Services.Interface.IParties)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Controllers.PartiesController"/> class
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PartiesController.GetPartyList(System.Int32)">
            <summary>
            Gets the list of parties that the logged in user can represent
            </summary>
            <param name="userId">the user id</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PartiesController.ValidateSelectedParty(System.Int32,System.Int32)">
            <summary>
            Verifies that the user can represent the given party
            </summary>
            <param name="userId">The user id"</param>
            <param name="partyId">The party id"</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.PolicyController">
            <summary>
            Contains all actions related to managing authorization rules
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PolicyController.#ctor(Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint,Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Controllers.PolicyController})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Controllers.PolicyController"/> class.
            </summary>
            <param name="prp">The policy retrieval point</param>
            <param name="pap">The policy administration point</param>
            <param name="logger">logger</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PolicyController.WritePolicy(System.String,System.String)">
            <summary>
            Saves policy file to storage
            </summary>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <param name="app">Application identifier which is unique within an organisation.</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PolicyController.GetRolesWithAccess(System.String,System.String)">
            <summary>
            Gets a list of role codes which might give access to an app
            </summary>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <param name="app">Application identifier which is unique within an organisation.</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.PolicyController.GetResourcePolicies(System.Collections.Generic.List{System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch}},System.String)">
            <summary>
            Gets a list of resource policies for the list of org/apps
            </summary>
            <param name="appIdList">The list of org/apps</param>
            <param name="language">The language (not in use yet; exactly how is yet to be determined)</param>
            <returns>A list resourcePolicyResponses</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Controllers.RolesController">
            <summary>
            Contains all actions related to the roles model
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.RolesController.#ctor(Altinn.Platform.Authorization.Services.Interface.IRoles)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Controllers.RolesController"/> class
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Controllers.RolesController.Get(System.Int32,System.Int32)">
            <summary>
            Get the decision point roles for the loggedin user for a selected party
            </summary>
            <param name="coveredByUserId">the logged in user id</param>
            <param name="offeredByPartyId">the partyid of the person/org the logged in user is representing</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Exceptions.PlatformHttpException">
            <summary>
            Exception class to hold exceptions when talking to the platform REST services
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Exceptions.PlatformHttpException.Response">
            <summary>
            Responsible for holding an http request exception towards platform.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Exceptions.PlatformHttpException.CreateAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a platform exception
            </summary>
            <param name="response">The http response</param>
            <returns>A PlatformHttpException</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Exceptions.PlatformHttpException.#ctor(System.Net.Http.HttpResponseMessage,System.String)">
            <summary>
            Copy the response for further investigations
            </summary>
            <param name="response">the response</param>
            <param name="message">the message</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Exceptions.PlatformHttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Add serialization info.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Extensions.DataReaderExtensions">
            <summary>
            This class contains a set of extension methods for the <see cref="T:System.Data.IDataReader"/> interface.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Extensions.DataReaderExtensions.GetValue``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets a value from the current record of the given data reader, or the default value 
            for the given type <typeparamref name="T"/> if the reader value is <see cref="F:System.DBNull.Value"/>.
            </summary>
            <typeparam name="T">Type of value to retrieve.</typeparam>
            <param name="reader">Data reader positioned at a row.</param>
            <param name="colName">The column to get data from.</param>
            <returns>The reader value when present, otherwise the default value.</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Extensions.DataReaderExtensions.GetValue``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            Gets a value from the current record of the given data reader, or the given default value 
            if the reader value is <see cref="F:System.DBNull.Value"/>.
            </summary>
            <typeparam name="T">Type of value to retrieve.</typeparam>
            <param name="reader">Data reader positioned at a row.</param>
            <param name="colName">The column to get data from.</param>
            <param name="defaultValue">Default value to use if the reader value is <see cref="F:System.DBNull.Value"/>.</param>
            <returns>The reader value when present, otherwise the given default value.</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Extensions.HttpClientExtension">
            <summary>
            This extension is created to make it easy to add a bearer token to a HttpRequests. 
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Extensions.HttpClientExtension.PostAsync(System.Net.Http.HttpClient,System.String,System.String,System.Net.Http.HttpContent,System.String)">
            <summary>
            Extension that add authorization header to request
            </summary>
            <param name="httpClient">The HttpClient</param>
            <param name="authorizationToken">the authorization token (jwt)</param>
            <param name="requestUri">The request Uri</param>
            <param name="content">The http content</param>
            <param name="platformAccessToken">The platformAccess tokens</param>
            <returns>A HttpResponseMessage</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Extensions.HttpClientExtension.GetAsync(System.Net.Http.HttpClient,System.String,System.String,System.String)">
            <summary>
            Extension that add authorization header to request
            </summary>
            <param name="httpClient">The HttpClient</param>
            <param name="authorizationToken">the authorization token (jwt)</param>
            <param name="requestUri">The request Uri</param>
            <param name="platformAccessToken">The platformAccess tokens</param>
            <returns>A HttpResponseMessage</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Filters.IdentityTelemetryFilter">
            <summary>
            Filter to enrich request telemetry with identity information
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Filters.IdentityTelemetryFilter.#ctor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Filters.IdentityTelemetryFilter"/> class.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Filters.IdentityTelemetryFilter.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Health.HealthCheck">
            <summary>
            Health check service configured in startup. See https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/health-checks
            Listen to 
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Health.HealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <summary>
            Verifies the health status
            </summary>
            <param name="context">The healtcheck context</param>
            <param name="cancellationToken">The cancellationtoken</param>
            <returns>The health check result</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Health.HealthTelemetryFilter">
            <summary>
            Filter to exclude health check request from Application Insights
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Health.HealthTelemetryFilter.#ctor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Health.HealthTelemetryFilter"/> class.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Health.HealthTelemetryFilter.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Helpers.DelegationHelper">
            <summary>
            Delegation helper methods
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.SortRulesByDelegationPolicyPath(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule},System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule}@)">
            <summary>
            Sort rules for delegation by delegation policy file path, i.e. Org/App/OfferedBy/CoveredBy
            </summary>
            <param name="rules">The list of rules to be sorted</param>
            <param name="unsortableRules">The list of rules not able to sort by org/app/offeredBy/CoveredBy</param>
            <returns>A dictionary with key being the filepath for the delegation policy file, and value being the list of rules to be written to the delegation policy</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.TryGetCoveredByPartyIdFromMatch(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch},System.Int32@)">
            <summary>
            Gets a string representation of the CoveredByPartyId
            </summary>
            <returns>The CoveredByPartyId value</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.TryGetCoveredByUserIdFromMatch(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch},System.Int32@)">
            <summary>
            Gets a string representation of the CoveredByUserId
            </summary>
            <returns>The CoveredByUserId value</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.GetCoveredByFromMatch(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch},System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>
            Gets a int representation of the CoveredByUserId and CoverdByPartyId from an AttributeMatch list.
            This works under the asumptions that any valid search for å valid policy contains a CoveredBy and this must be in the form
            of a PartyId or a UserId. So any valid search containing a PartyId should not contain a USerId and vice versa.
            If the search does not contain any of those this should be considered as an invalid search.
            </summary>
            <param name="match">the list to fetch coveredBy from</param>
            <param name="coveredByUserId">The value for coveredByUserId or null if not present</param>
            <param name="coveredByPartyId">The value for coveredByPartyId or null if not present</param>
            <returns>The CoveredByUserId or CoveredByPartyId in the input AttributeMatch list as a string primarly used to create a policypath for fetching a delegated policy file.</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.TryGetResourceFromAttributeMatch(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch},System.String@,System.String@)">
            <summary>
            Gets Org and App as out params from a single Resource
            </summary>
            <param name="input">The resource to fetch org and app from</param>
            <param name="org">the org part of the resource</param>
            <param name="app">the app part of the resource</param>
            <returns>A bool indicating whether params where found</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.TryGetDelegationParamsFromRule(Altinn.Platform.Authorization.Models.Rule,System.String@,System.String@,System.Int32@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Int32@)">
            <summary>
            Gets Org, App, OfferedBy and CoveredBy as out params from a single Rule
            </summary>
            <returns>A bool indicating whether params where found</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.TryGetDelegationPolicyPathFromRule(Altinn.Platform.Authorization.Models.Rule,System.String@)">
            <summary>
            Gets the delegation policy path for a single Rule
            </summary>
            <returns>A bool indicating whether necessary params to build the path where found</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.GetPolicyCount(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule})">
            <summary>
            Returns the count of unique Policies in a list of Rules
            </summary>
            <param name="rules">List of rules to check how many individual policies exist</param>
            <returns>count of policies</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.GetRulesCountToDeleteFromRequestToDelete(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.RequestToDelete})">
            <summary>
            Returns the count of unique ruleids in a list dele
            </summary>
            <param name="rulesToDelete">List of rules and policies to check how many individual ruleids exist</param>
            <returns>count of rules</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.PolicyContainsMatchingRule(Altinn.Authorization.ABAC.Xacml.XacmlPolicy,Altinn.Platform.Authorization.Models.Rule)">
            <summary>
            Checks whether the provided XacmlPolicy contains a rule having an identical Resource signature and contains the Action from the rule,
            to be used for checking for duplicate rules in delegation, or that the rule exists in the Apps Xacml policy.
            </summary>
            <returns>A bool</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.GetAttributeMatchKey(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch})">
            <summary>
            Gets a string key representing the a list of attributematches
            </summary>
            <returns>A key string</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.DelegationHelper.SetRuleType(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule},System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{Altinn.Platform.Authorization.Models.AttributeMatch},System.Int32)">
            <summary>
            Sets the RuleType on each rule in the given list
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Helpers.EventLogHelper">
            <summary>
            Helper class for event logging
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.EventLogHelper.MapAuthorizationEventFromContextRequest(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,Microsoft.AspNetCore.Http.HttpContext,Altinn.Authorization.ABAC.Xacml.XacmlContextResponse,System.DateTime)">
            <summary>
            Maps the user, resource information from
            </summary>
            <param name="contextRequest">the context request</param>
            <param name="context">the http context</param>
            <param name="contextRespsonse">the http context response</param>
            <param name="currentDateTime">the current date time</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.EventLogHelper.GetResourceAttributes(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Returens the policy resource type based on XacmlContextRequest
            </summary>
            <param name="request">The requestId</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.EventLogHelper.GetSubjectInformation(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Returens the policy resource type based on XacmlContextRequest
            </summary>
            <param name="request">The requestId</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.EventLogHelper.GetActionInformation(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Returens the policy resource type based on XacmlContextRequest
            </summary>
            <param name="request">The requestId</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.EventLogHelper.GetClientIpAddress(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Get the client ip address
            </summary>
            <param name="context">the http request context</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Helpers.Extensions.StringExtensions">
            <summary>
            Extensions to facilitate sanitization of string values
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.Extensions.StringExtensions.AsFileName(System.String,System.Boolean)">
            <summary>
            Sanitize the input as a file name. 
            </summary>
            <param name="input">The input variable to be sanitized</param>
            <param name="throwExceptionOnInvalidCharacters">Throw exception instead of replacing invalid characters with '-'</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Helpers.PolicyHelper">
            <summary>
            Policy helper methods
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetRolesWithAccess(Altinn.Authorization.ABAC.Xacml.XacmlPolicy)">
            <summary>
            Extracts a list of all roles codes mentioned in a permit rule in a policy. 
            </summary>
            <param name="policy">The policy</param>
            <returns>List of role codes</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetPolicyPath(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Finds the correct policy path based on a XacmlContextRequest
            </summary>
            <param name="request">Xacml context request to use for finding the org and app for building the path</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetPolicyResourceType(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,System.String@)">
            <summary>
            Returens the policy resource type based on XacmlContextRequest
            </summary>
            <param name="request">The requestId</param>
            <param name="policyId">The policy Id</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetAltinnAppsPolicyPath(System.String,System.String)">
            <summary>
            Builds the policy path based on org and app names
            </summary>
            <param name="org">The organization name/identifier</param>
            <param name="app">The altinn app name</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.CreateRuleFromPolicyAndRuleMatch(Altinn.Platform.Authorization.Models.RequestToDelete,Altinn.Authorization.ABAC.Xacml.XacmlRule)">
            <summary>
            Creates a Rule representation based on a search and a xacmlRule found in a XacmlPolicyFile based on the search
            </summary>
            <param name="search">The search used to find the correct rule</param>
            <param name="xacmlRule">XacmlRule found by the search param to enrich the result with Action and Resource</param>
            <returns>The created Rule</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetAltinnAppDelegationPolicyPath(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Builds the delegation policy path based on org and app names, as well as identifiers for the delegating and receiving entities
            </summary>
            <param name="org">The organization name/identifier</param>
            <param name="app">The altinn app name</param>
            <param name="offeredBy">The party id of the entity offering the delegated the policy</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy or null if party id</param>
            <param name="coveredByPartyId">The party id of the entity having received the delegated policy or null if user id</param>
            <returns>policypath matching input data</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetAltinnAppDelegationPolicyPath(Altinn.Platform.Authorization.Models.PolicyMatch)">
            <summary>
            Builds the delegation policy path based on input policyMatch
            </summary>
            <param name="policyMatch">param to build policypath from</param>
            <returns>policypath matching input data</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.ParsePolicy(System.IO.Stream)">
            <summary>
            Takes the file IO stream and parses the policy file to a XacmlPolicy <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlPolicy"/>
            </summary>
            <param name="stream">The file IO stream</param>
            <returns>XacmlPolicy</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetXmlMemoryStreamFromXacmlPolicy(Altinn.Authorization.ABAC.Xacml.XacmlPolicy)">
            <summary>
            Serializes the XacmlPolicy <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlPolicy"/> to Xml and returns it as a Memory stream
            </summary>
            <param name="policy">The XacmlPolicy model to serialize to a memory stream</param>
            <returns>MemoryStream of the Xml serialized policy</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.BuildDelegationPolicy(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Altinn.Platform.Authorization.Models.Rule})">
            <summary>
            Builds a XacmlPolicy <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlPolicy"/> representation based on the DelegationPolicy input
            </summary>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <param name="app">Application identifier which is unique within an organisation.</param>
            <param name="offeredByPartyId">The party id of the entity offering the delegated the policy</param>
            <param name="coveredByPartyId">The party of the entity having received the delegated policy, if the receiving entity is an organization</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy, if the receiving entity is a user</param>
            <param name="rules">The set of rules to be delegated</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.BuildDelegationRule(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},Altinn.Platform.Authorization.Models.Rule)">
            <summary>
            Builds a XacmlRule <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlRule"/> representation based on the Rule input
            </summary>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <param name="app">Application identifier which is unique within an organisation.</param>
            <param name="offeredByPartyId">The party id of the entity offering the delegated the policy</param>
            <param name="coveredByPartyId">The party of the entity having received the delegated policy, if the receiving entity is an organization</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy, if the receiving entity is a user</param>
            <param name="rule">The rule to be delegated</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.BuildDelegationRuleTarget(System.Nullable{System.Int32},System.Nullable{System.Int32},Altinn.Platform.Authorization.Models.Rule)">
            <summary>
            Builds a XacmlTarget <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlTarget"/> representation based on the Rule input
            </summary>
            <param name="coveredByPartyId">The party of the entity having received the delegated policy, if the receiving entity is an organization</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy, if the receiving entity is a user</param>
            <param name="rule">The rule to be delegated</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.BuildDelegationPolicyMatch(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Builds a XacmlMatch <see cref="T:Altinn.Authorization.ABAC.Xacml.XacmlMatch"/> model
            </summary>
            <param name="function">The compare function type</param>
            <param name="datatype">The attribute data type</param>
            <param name="attributeValue">The attribute value</param>
            <param name="attributeId">The attribute id</param>
            <param name="category">The attribute category</param>
            <param name="mustBePresent">Whether the attribute value must be present</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetResourcePoliciesFromXacmlPolicy(Altinn.Authorization.ABAC.Xacml.XacmlPolicy,System.String)">
            <summary>
            Gets the entire policy as a list of <see cref="T:Altinn.Platform.Authorization.Models.ResourcePolicy"/>. 
            </summary>
            <param name="policy">The policy</param>
            <param name="language">The language (not in use yet; exactly how is yet to be determined)</param>
            <returns>List of resource policies</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Helpers.PolicyHelper.GetMinimumAuthenticationLevelFromXacmlPolicy(Altinn.Authorization.ABAC.Xacml.XacmlPolicy)">
            <summary>
            Gets the authentication level requirement from the obligation expression of the XacmlPolicy if specified 
            </summary>
            <param name="policy">The policy</param>
            <returns>Minimum authentication level requirement</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModel">
            <summary>
            This is an model special created to support both JSON and XML in the same endpoint.
            It will be created by a custom Model binder created for this case
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModel.BodyContent">
            <summary>
            Gets or sets the BodyContent coming from the request. Populated by the AltinnCoreApiModelBinder
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModelBinder">
            <summary>
            Custom model binder to be able to read the Request Body and later Deserialize it.
            The body is not available inside a controller method
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Binds the Body to the AltinnCoreApiModel
            </summary>
            <param name="bindingContext">the binding context</param>
            <returns>The task</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModelBinderProvider">
            <summary>
            Special BinderProvider to support JSON and XML on the same method for posting through REST-API
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.ModelBinding.XacmlRequestApiModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <summary>
            Returns the specific API binder
            </summary>
            <param name="context">The context</param>
            <returns>The binder</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.AttributeMatch">
            <summary>
            This model describes a pair of AttributeId and AttributeValue for use in matching in XACML policies, for instance a resource, a user, a party or an action.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.AttributeMatch.Id">
            <summary>
            Gets or sets the attribute id for the match
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.AttributeMatch.Value">
            <summary>
            Gets or sets the attribute value for the match
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChange">
            <summary>
            This model describes a delegation change as stored in the Authorization postgre DelegationChanges table.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.DelegationChangeId">
            <summary>
            Gets or sets the delegation change id
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.DelegationChangeType">
            <summary>
            Gets or sets the delegation change type
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.AltinnAppId">
            <summary>
            Gets or sets the altinnappid. E.g. skd/skattemelding
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.OfferedByPartyId">
            <summary>
            Gets or sets the offeredbypartyid, refering to the party id of the user or organization offering the delegation.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.CoveredByPartyId">
            <summary>
            Gets or sets the coveredbypartyid, refering to the party id of the organization having received the delegation. Otherwise Null if the recipient is a user.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.CoveredByUserId">
            <summary>
            Gets or sets the coveredbyuserid, refering to the user id of the user having received the delegation. Otherwise Null if the recipient is an organization.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.PerformedByUserId">
            <summary>
            Gets or sets the user id of the user that performed the delegation change (either added or removed rules to the policy, or deleted it entirely).
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.BlobStoragePolicyPath">
            <summary>
            Gets or sets blobstoragepolicypath.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.BlobStorageVersionId">
            <summary>
            Gets or sets the blobstorage versionid
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChange.Created">
            <summary>
            Gets or sets the created date and timestamp for the delegation change
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEvent">
            <summary>
            Internal model for a delegation change event used between Altinn.Platform.Authorization and this function app
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEvent.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEvent.DelegationChange">
            <summary>
            Gets or sets the delegation change.
            </summary>
            <value>
            The delegation change.
            </value>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventList">
            <summary>
            The internal wrapper model for expressing a list of delegation change events sent from Altinn.Platform.Authorization
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventList.DelegationChangeEvents">
            <summary>
            Gets or sets the delegation change events.
            </summary>
            <value>
            The delegation change events.
            </value>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventType">
            <summary>
            The type of delegation change event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventType.Undefined">
            <summary>
            Undefined default value
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventType.Grant">
            <summary>
            Grant event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventType.Revoke">
            <summary>
            Revoke event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeEvent.DelegationChangeEventType.RevokeLast">
            <summary>
            Revoke last right event
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange">
            <summary>
            This model describes a delegation change as stored in the PostgreSQL-database Authorization in the table DelegatedPolicy.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.DelegationChangeId">
            <summary>
            Gets or sets the delegation change id
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.AltinnAppId">
            <summary>
            Gets or sets the altinnappid. E.g. skd/skattemelding
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.OfferedByPartyId">
            <summary>
            Gets or sets the offeredbypartyid, refering to the party id of the user or organization offering the delegation.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.CoveredByPartyId">
            <summary>
            Gets or sets the coveredbypartyid, refering to the party id of the organization having received the delegation. Otherwise Null if the recipient is a user.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.CoveredByUserId">
            <summary>
            Gets or sets the coveredbyuserid, refering to the user id of the user having received the delegation. Otherwise Null if the recipient is an organization.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.PerformedByUserId">
            <summary>
            Gets or sets the user id of the user that performed the delegation change (either added or removed rules to the policy, or deleted it entirely).
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.DelegationChangeEvent.SimpleDelegationChange.Created">
            <summary>
            Gets or sets the created date and timestamp for the delegation change
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.DelegationChangeType">
            <summary>
            The type of delegation change
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeType.Undefined">
            <summary>
            Undefined default value
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeType.Grant">
            <summary>
            Grant event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeType.Revoke">
            <summary>
            Revoke event
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.DelegationChangeType.RevokeLast">
            <summary>
            Revoke last right event
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent">
            <summary>
            This model describes an authorization event. An authorization event is an action triggered when a user requests access to an operation
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.SessionId">
            <summary>
            Session Id of the request
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.Created">
            <summary>
            Date, time of the authorization event. Set by producer of logevents
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.SubjectUserId">
            <summary>
            The userid for the user that requested authorization
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.SubjectOrgCode">
            <summary>
            The org code for the org that requested authorization
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.SubjectOrgNumber">
            <summary>
            The org number for the org that requested authorization
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.SubjectParty">
            <summary>
            The partyid for the user that requested authorization
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.ResourcePartyId">
            <summary>
            The partyId for resource owner when applicable
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.Resource">
            <summary>
            The Main resource Id (app, external resource +)
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.InstanceId">
            <summary>
            Instance Id when applicable
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.Operation">
            <summary>
            Type of operation
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.TimeToDelete">
            <summary>
            Duration of log retention
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.IpAdress">
            <summary>
            The Ip adress of the calling party
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.ContextRequestJson">
            <summary>
            The enriched context request
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent.Decision">
            <summary>
            Decision for the authorization request
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.MainUnit">
            <summary>
            Model returned by SBL Bridge partyparents endpoint, describing a main unit (hovedenhet).
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.MainUnit.PartyId">
            <summary>
            Gets or sets the PartyId of the main unit
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.MainUnit.SubunitPartyId">
            <summary>
            Gets or sets the PartyId of the subunit
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.MainUnit.OrganizationNumber">
            <summary>
            Gets or sets the organization number of the main unit
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.MainUnit.OrganizationName">
            <summary>
            Gets or sets the name of the main unit
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.MainUnitQuery">
            <summary>
            Input Model used by SBL Bridge partyparents endpoint, for listing the subunit partyIds to retrieve mainunit information for.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.MainUnitQuery.PartyIds">
            <summary>
            Gets or sets the PartyId of the main unit
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment">
            <summary>
            Model for OED role assignment
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment.OedRoleCode">
            <summary>
            The OED/Digitalt d�dsbo role code 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment.From">
            <summary>
            The deceased person's pid
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment.To">
            <summary>
            The inheriting person's pid
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment.Created">
            <summary>
            The datetime created
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.OedRoleAssignmentRequest">
            <summary>
            Model for requesting OED/Digitalt d�dsbo role assignments between two persons
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.OedRoleAssignmentRequest.From">
            <summary>
            The person the OED/Digitalt d�dsbo role if provided from (the deceased)
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.OedRoleAssignmentRequest.To">
            <summary>
            The person the OED/Digitalt d�dsbo role if provided to
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.OedRoleAssignments">
            <summary>
            Model for a list of OED/Digitalt d�dsbo role assignment
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.OedRoleAssignments.RoleAssignments">
            <summary>
            The list of OED/Digitalt d�dsbo role assignments
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.PolicyMatch">
            <summary>
            This model describes a single rule in a delegated policy
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.PolicyMatch.OfferedByPartyId">
            <summary>
            Gets or sets the unique identifier for a specific party for which the requested rule in the policy applies
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.PolicyMatch.Resource">
            <summary>
            Gets or sets resource match which uniquely identifies the resource this policy applies to.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.PolicyMatch.CoveredBy">
            <summary>
            Gets or sets the set of Attribute Id and Attribute Value for the coveredby id
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.PolicyResourceType">
            <summary>
            The type of delegation change
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.PolicyResourceType.Undefined">
            <summary>
            Undefined default value
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.PolicyResourceType.AltinnApps">
            <summary>
            Policy for an application hosted in Altinn Apps
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.PolicyResourceType.ResourceRegistry">
            <summary>
            Revo
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.QueuePostReceipt">
            <summary>
            Object to hold the receipt for a push queue action.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.QueuePostReceipt.Success">
            <summary>
            Boolean to indicate if the push was successful.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.QueuePostReceipt.Exception">
            <summary>
            Exception. Only populated if the push failed.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RequestToDelete">
            <summary>
            This model describes a list of rules to delete from a single policyfile
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RequestToDelete.RuleIds">
            <summary>
            Gets or sets a list of unique identifier for specific rules within a policy.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RequestToDelete.DeletedByUserId">
            <summary>
            Gets or sets the user id of the user who performed the deletion.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RequestToDelete.PolicyMatch">
            <summary>
            Gets or sets the policy to delete from
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Models.RequestToDelete.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Method validating the model
            </summary>
            <param name="validationContext">The context to validate for</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RequestToDeleteRuleList">
            <summary>
            Class to wrap a list of RequestToDelete
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Models.RequestToDeleteRuleList.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Method validating the model
            </summary>
            <param name="validationContext">The context to validate for</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RequestToDeletePolicyList">
            <summary>
            Class to wrap a list of RequestToDelete
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Models.RequestToDeletePolicyList.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Method validating the model
            </summary>
            <param name="validationContext">The context to validate for</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.ResourceAction">
            <summary>
            This model describes an action that may be used in a rule describing a right.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourceAction.Match">
            <summary>
            Gets or sets the set of Attribute Id and Attribute Value for the specific action, from the original app policy
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourceAction.Title">
            <summary>
            Gets or sets a title for the action
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourceAction.Description">
            <summary>
            Gets or sets a description of the action.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourceAction.RoleGrants">
            <summary>
            Gets or sets which roles are granted access to this action on this resource
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.ResourcePolicy">
            <summary>
            This model describes the actions that can be performed for a particular resource
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicy.Description">
            <summary>
            Gets or sets a description of the resource policy.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicy.Title">
            <summary>
            Gets or sets a title for the resource policy to be used for displaying the resource in AltinnII.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicy.Actions">
            <summary>
            Gets or sets the actions associcated with this particular resource including which roles have been granted access to it
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicy.Resource">
            <summary>
            Gets or sets the list of resource matches which together uniquely identifies the resource in the app policy, e.g. org, app and/or tasks, events etc.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.ResourcePolicyResponse">
            <summary>
            This model wraps the response for looking up resource policies for a specific Altinn app.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicyResponse.AppId">
            <summary>
            Gets or sets the attribute match specification for identifying the app
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicyResponse.ResourcePolicies">
            <summary>
            Gets or sets the list of resource policies, detailing what action are available for the different the resources, as specifiec in the app policy.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicyResponse.MinimumAuthenticationLevel">
            <summary>
            The minimum authentication level requirement of the app
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.ResourcePolicyResponse.ErrorResponse">
            <summary>
            The error response if request fails
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RoleGrant">
            <summary>
            This model describes a role which a particular action is given to.
            example: RoleGrant { "RoleTypeCode": "DAGL", "IsDelegable": true }
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RoleGrant.RoleTypeCode">
            <summary>
            Gets or sets role type code the grant is for.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RoleGrant.IsDelegable">
            <summary>
            Gets or sets a value indicating whether having the specified role also permits the user to delegate the right specified by the ResourceAction to other recipients (if the receiver of the role also have administrative rights).
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.Rule">
            <summary>
            This model describes a single rule in a delegated policy
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.RuleId">
            <summary>
            Gets or sets the unique identifier for a specific rule within a policy (Output only).
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.Type">
            <summary>
            Gets or sets the type of rule this is and why it is relevant for a given coveredby (recipient). Only part of output model when querying rules.
            Policies may apply(grant rights) in four different ways:
            1. Direct delegations. This rule applies given directly to the recipient.
            2. Inherited via key role. This rule grants a right given to a party where the recipient has a key role, thus inheriting all rights given to the party.
            3. Inherited as subunit. If offeredby is a subunit, rights given from its parent to the recipient also applies to the subunit.
            4. Inherited as subunit via keyrole.If offeredby is a subunit, rights given from its parent to a party in which the recipient has a key role also applies to the subunit.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.CreatedSuccessfully">
            <summary>
            Gets or sets the a value indicating whered the result of the create operation finished successfully (Output only).
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.DelegatedByUserId">
            <summary>
            Gets or sets the user id of the user who performed the delegation. When creating new rules, this is supplied to indicate who performed the delegation, allowing the 3.0 PAP to determine whether or not the user is allowed to do so and to log accordingly. Only part of input model when adding single rules.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.OfferedByPartyId">
            <summary>
            Gets or sets the party offering the rights to the receiving (CoveredBy) entity.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.CoveredBy">
            <summary>
            Gets or sets the party receiving (covered by) the rights from the delegating (OfferedByPartyId) entity
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.Resource">
            <summary>
            Gets or sets the list of resource matches which uniquely identifies the resource this rule applies to.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.Rule.Action">
            <summary>
            Gets or sets the set of Attribute Id and Attribute Value for a specific action, to identify the action from the original App Policy
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RuleQuery">
            <summary>
            Queries for a list of already delegated rules from the supplied offeredby for the supplied app. If coveredby
            has any key roles, those party ids can be included in the query to have the 3.0 PIP lookup those as well.
            If offeredby is a sub unit, parenty party id can be supplied to include rules given from that party as well.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RuleQuery.ParentPartyId">
            <summary>
            Gets or sets the unique identifier for a the parent party id
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RuleQuery.KeyRolePartyIds">
            <summary>
            Gets or sets the list of key role party ids
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RuleQuery.OfferedByPartyId">
            <summary>
            Gets or sets the unique identifier for a specific party for which the requested rule in the policy applies
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RuleQuery.Resources">
            <summary>
            Gets or sets resource match which uniquely identifies the resource this policy applies to.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.RuleQuery.CoveredBy">
            <summary>
            Gets or sets the set of Attribute Id and Attribute Value for the coveredby id
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.RuleType">
            <summary>
            This model defines the different types of rules and why it is relevant for a given coveredby (recipient).
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.RuleType.None">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.RuleType.DirectlyDelegated">
            <summary>
            Direct delegations. The policy includes rights given directly to the recipient.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.RuleType.InheritedViaKeyRole">
            <summary>
            Inherited via key role. The policy includes rights given to a party where the recipient has a key role, thus inheriting all rights given to the party.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.RuleType.InheritedAsSubunit">
            <summary>
            Inherited as subunit. If offeredby is a subunit, rights given from its parent to the recipient also applies to the subunit.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Authorization.Models.RuleType.InheritedAsSubunitViaKeyrole">
            <summary>
            Inherited as subunit via keyrole. If offeredby is a subunit, rights given from its parent to a party in which the recipient has a key role also applies to the subunit.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Models.XacmlResourceAttributes">
            <summary>
            Defines the resource attributes in a xacml request
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.OrgValue">
            <summary>
            Gets or sets the value for org attribute
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.AppValue">
            <summary>
            Gets or sets the value for app attribute
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.InstanceValue">
            <summary>
            Gets or sets the value for instance attribute
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.ResourcePartyValue">
            <summary>
            Gets or sets the value for resourceparty attribute
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.TaskValue">
            <summary>
            Gets or sets the value for task attribute
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.AppResourceValue">
            <summary>
            Gets or sets the value for app resource. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.ResourceRegistryId">
            <summary>
            Gets or sets the resource registry Id
            </summary>
        </member>
        <member name="P:Altinn.Platform.Authorization.Models.XacmlResourceAttributes.OrganizationNumber">
            <summary>
            Gets or sets the OrganizationNumber for the org owning the resource
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository">
            <summary>
            Repository implementation for PostgreSQL operations on delegations.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.#ctor(Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.PostgreSQLSettings},Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository"/> class
            </summary>
            <param name="postgresSettings">The postgreSQL configurations for AuthorizationDB</param>
            <param name="logger">logger</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.InsertDelegation(Altinn.Platform.Authorization.Models.DelegationChange)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.GetCurrentDelegationChange(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.GetAllDelegationChanges(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.GetAllCurrentDelegationChanges(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.DelegationMetadataRepository.GetDelegationChangesByIdRange(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository">
            <summary>
            Repository for retrieving instance information
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.#ctor(Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.AzureCosmosSettings},Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository},System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.PlatformSettings},Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository"/> class
            </summary>
            <param name="cosmosettings">the configuration settings for cosmos database</param>
            <param name="logger">the logger</param>
            <param name="storageClient">Storage client</param>
            <param name="platformSettings">Storage config</param>
            <param name="generalSettings">General config to determine storage interface method</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.GetAuthInfo(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.GetInstance(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.GetInstance(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.GetApplication(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.PostProcess(Altinn.Platform.Storage.Interface.Models.Application)">
            <summary>
            postprocess applications so that appId becomes org/app-23 to use outside cosmos
            </summary>
            <param name="application">the application to postprocess</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.PostProcess(Altinn.Platform.Storage.Interface.Models.Instance)">
            <summary>
            Converts the instanceId (id) of the instance from {instanceGuid} to {instanceOwnerId}/{instanceGuid} to be used outside cosmos.
            </summary>
            <param name="instance">the instance to preprocess</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.AppIdToCosmosId(System.String)">
            <summary>
            Converts the appId "{org}/{app}" to "{org}-{app}"
            </summary>
            <param name="app">Application identifier which is unique within an organisation.</param>
            <returns>the converted id</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.CosmosIdToAppId(System.String)">
            <summary>
            Converts the cosmosId "{org}-{app}" to "{org}/{app}"
            </summary>
            <param name="cosmosId">the id to convert</param>
            <returns>the converted id</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.InstanceIdToCosmosId(System.String)">
            <summary>
            An instanceId should follow this format {int}/{guid}.
            Cosmos does not allow / in id.
            But in some old cases instanceId is just {guid}.
            </summary>
            <param name="instanceId">the id to convert to cosmos</param>
            <returns>the guid of the instance</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.InstanceMetadataRepository.GetInstanceOwnerIdFromInstanceId(System.String)">
            <summary>
            An instanceId should follow this format {int}/{guid}.
            Cosmos does not allow / in id.
            But in some old cases instanceId is just {guid}.
            </summary>
            <param name="instanceId">the id to convert to cosmos</param>
            <returns>the guid of the instance</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository">
            <summary>
            Interface for PostgreSQL operations on delegations.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository.InsertDelegation(Altinn.Platform.Authorization.Models.DelegationChange)">
            <summary>
            Writes the delegation change metadata to the delegation database
            </summary>
            <param name="delegationChange">The DelegationChange model describing the delegation, to insert in the database</param>
            <returns>The complete DelegationChange record stored in the database</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository.GetCurrentDelegationChange(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the latest delegation change matching the filter values
            </summary>
            <param name="altinnAppId">The AltinnApp identifier iin the format org/appname</param>
            <param name="offeredByPartyId">The party id of the entity offering the delegated the policy</param>
            <param name="coveredByPartyId">The party id of the entity having received the delegated policy, if the entity is an organization</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy, if the entity is a user</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository.GetAllDelegationChanges(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all the delegation change records matching the filter values for a complete changelog
            </summary>
            <param name="altinnAppId">The AltinnApp identifier iin the format org/appname</param>
            <param name="offeredByPartyId">The party id of the entity offering the delegated the policy</param>
            <param name="coveredByPartyId">The party id of the entity having received the delegated policy, if the entity is an organization</param>
            <param name="coveredByUserId">The user id of the entity having received the delegated policy, if the entity is a user</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository.GetAllCurrentDelegationChanges(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets all the current delegation change records matching the filter values
            </summary>
            <param name="offeredByPartyIds">The list of party id of the entity offering the delegated the policy</param>
            <param name="altinnAppIds">The list of AltinnApp identifier iin the format org/appname</param>
            <param name="coveredByPartyIds">The list of party id of the entity having received the delegated policy, if the entity is an organization</param>
            <param name="coveredByUserIds">The list of user id of the entity having received the delegated policy, if the entity is a user</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository.GetDelegationChangesByIdRange(System.Int32,System.Int32)">
            <summary>
            Operation for getting delegationchange events by delegation change id range
            </summary>
            <param name="startId">The first id in the range to retrieve</param>
            <param name="endId">The last id in the range to retrieve. If left to 0 all events after the startId will be returned</param>
            <returns>List of delegation changes</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository">
            <summary>
            Interface for operations on instance information
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository.GetAuthInfo(System.String)">
            <summary>
            Gets auth info for a process
            </summary>
            <param name="instanceId">the instance id</param>
            <returns>Auth info</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository.GetInstance(System.String,System.Int32)">
            <summary>
            Gets the information of a given instance
            </summary>
            <param name="instanceId">the instance id</param>
            <param name="instanceOwnerId">the instance owner</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository.GetInstance(System.String)">
            <summary>
            Gets the information of a given instance
            </summary>
            <param name="instanceId">the instance id</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository.GetApplication(System.String,System.String)">
            <summary>
            Gets the application information of a given instance
            </summary>
            <param name="app">Application identifier which is unique within an organisation.</param>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository">
            <summary>
            Interface for operations on policy files.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.GetPolicyAsync(System.String)">
            <summary>
            Gets file stream for the policy file from blob storage, if it exists at the specified path.
            </summary>
            <param name="filepath">The file path.</param>
            <returns>File stream of the policy file</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.GetPolicyVersionAsync(System.String,System.String)">
            <summary>
            Gets file stream for the specified version of a policy file from blob storage, if it exists at the specified path.
            </summary>
            <param name="filepath">The file path.</param>
            <param name="version">The blob storage version</param>
            <returns>File stream of the policy file</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.WritePolicyAsync(System.String,System.IO.Stream)">
            <summary>
            Writes a file stream to blobstorage to the specified path.
            </summary>
            <param name="filepath">The file path.</param> 
            <param name="fileStream">File stream of the policy file to be written</param>
            <returns>Azure response BlobContentInfo</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.WritePolicyConditionallyAsync(System.String,System.IO.Stream,System.String)">
            <summary>
            Writes a file stream to blobstorage to the specified path, including the conditional check that the provided blob lease id is valid.
            </summary>
            <param name="filepath">The file path.</param> 
            <param name="fileStream">File stream of the policy file to be written</param>
            <param name="blobLeaseId">The blob lease id, required to be able to write after a lock</param>
            <returns>Azure response BlobContentInfo</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.DeletePolicyVersionAsync(System.String,System.String)">
            <summary>
            Deletes a specific version of a blob storage file if it exits on the specified path.
            </summary>
            <param name="filepath">The file path.</param>
            <param name="version">The blob storage version</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.TryAcquireBlobLease(System.String)">
            <summary>
            Tries to acquire a blob lease on the base blob for the provided filepath.
            </summary>
            <param name="filepath">The file path of the base blob to aquire a blob lease on</param>
            <returns>The LeaseId if a release was possible, otherwise null</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.ReleaseBlobLease(System.String,System.String)">
            <summary>
            Releases a blob lease on the base blob for the provided filepath using the provided leaseId.
            </summary>
            <param name="filepath">The file path of the base blob to release</param>
            <param name="leaseId">The lease id from to release</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository.PolicyExistsAsync(System.String)">
            <summary>
            Checks whether there exists a blob at the specified path
            </summary>
            <param name="filepath">The file path to check if a blob exists</param>
            <returns>Bool whether the blob exists or not</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Repositories.PolicyRepository">
            <summary>
            Repository for handling policy files
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.#ctor(Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration},Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Repositories.PolicyRepository})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Repositories.PolicyRepository"/> class
            </summary>
            <param name="storageConfig">The storage configuration for Azure Blob Storage.</param>
            <param name="logger">logger</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.GetPolicyAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.GetPolicyVersionAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.WritePolicyAsync(System.String,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.WritePolicyConditionallyAsync(System.String,System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.TryAcquireBlobLease(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.ReleaseBlobLease(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.PolicyExistsAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Repositories.PolicyRepository.DeletePolicyVersionAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.ContextHandler">
             <summary>
             The context handler is responsible for updating a context request
             From XACML standard
            
             Context Handler
             The system entity that converts decision requests in the native request format to the XACML canonical form, coordinates with Policy
             Information Points to add attribute values to the request context, and converts authorization decisions in the XACML canonical form to
             the native response format
             </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.#ctor(Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository,Altinn.Platform.Authorization.Services.Interface.IRoles,Altinn.Platform.Authorization.Services.Interface.IOedRoleAssignmentWrapper,Altinn.Platform.Authorization.Services.Interface.IParties,Altinn.Platform.Authorization.Services.Interface.IProfile,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings},Altinn.Platform.Authorization.Services.Interfaces.IRegisterService,Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.ContextHandler"/> class
            </summary>
            <param name="policyInformationRepository">the policy information repository handler</param>
            <param name="rolesWrapper">the roles handler</param>
            <param name="oedRolesWrapper">service handling oed role retireval</param>
            <param name="partiesWrapper">the party information handler</param>
            <param name="profileWrapper">the user profile information handler</param>
            <param name="memoryCache">The cache handler </param>
            <param name="settings">The app settings</param>
            <param name="registerService">Register service</param>
            <param name="prp">service handling policy retireval</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.Enrich(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Ads needed information to the Context Request.
            </summary>
            <param name="request">The original Xacml Context Request</param>
            <returns>The enriched XacmlContextRequest</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.EnrichResourceAttributes(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Enriches the resource attribute collection with additional attributes retrieved based on the instance on the request
            </summary>
            <param name="request">The original Xacml Context Request</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.EnrichResourceParty(Altinn.Platform.Authorization.Models.XacmlResourceAttributes)">
            <summary>
            Method that adds information about the resource party 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetResourceAttributeValues(Altinn.Authorization.ABAC.Xacml.XacmlContextAttributes)">
            <summary>
            Maps the XacmlContextAttributes for the Xacml Resource category to the Altinn XacmlResourceAttributes model
            </summary>
            <param name="resourceContextAttributes">XacmlContextAttributes for mapping of resource attribute values</param>
            <returns>XacmlResourceAttributes</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.AddIfValueDoesNotExist(Altinn.Authorization.ABAC.Xacml.XacmlContextAttributes,System.String,System.String,System.String)">
            <summary>
            Add a XacmlAttribute to the resourceAttributes collection, if the existing value is empty
            </summary>
            <param name="resourceAttributes">The collection of resource attribues</param>
            <param name="attributeId">The attribute id</param>
            <param name="attributeValue">The existing attribute value</param>
            <param name="newAttributeValue">The new attribute value</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetAttribute(System.String,System.String)">
            <summary>
            Gets a XacmlAttribute model for the specified attribute id and value
            </summary>
            <param name="attributeId">The attribute id</param>
            <param name="attributeValue">The attribute value</param>
            <returns>XacmlAttribute</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.EnrichSubjectAttributes(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,System.String)">
            <summary>
            Enriches the XacmlContextRequest with the Roles the subject user has for the resource reportee
            </summary>
            <param name="request">The original Xacml Context Request</param>
            <param name="resourceParty">The resource reportee party id</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetRoleAttribute(System.Collections.Generic.List{Authorization.Platform.Authorization.Models.Role})">
            <summary>
            Gets a XacmlAttribute model for the list of roletype codes
            </summary>
            <param name="roles">The list of roletype codes</param>
            <returns>XacmlAttribute</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetOedRoleAttributes(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Oed.OedRoleAssignment})">
            <summary>
            Gets a XacmlAttribute model for the list of oed role attributes
            </summary>
            <param name="oedRoleAssignments">The list of oedRoleAssignments</param>
            <returns>XacmlAttribute</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetPartyIdsAttribute(System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets a XacmlAttribute model for a list of party ids
            </summary>
            <param name="partyIds">The list of party ids</param>
            <returns>XacmlAttribute</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetRoles(System.Int32,System.Int32)">
            <summary>
            Gets the list of roletype codes the subject user has for the resource reportee
            </summary>
            <param name="subjectUserId">The user id of the subject</param>
            <param name="resourcePartyId">The party id of the reportee</param>
            <returns>List of roles</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetMainUnits(System.Int32)">
            <summary>
            Gets the list of mainunits for a subunit
            </summary>
            <param name="subUnitPartyId">The subunit partyId to check and retrieve mainunits for</param>
            <returns>List of mainunits</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetKeyRolePartyIds(System.Int32)">
            <summary>
            Gets the list of keyrole unit partyIds for a user
            </summary>
            <param name="subjectUserId">The userid to retrieve keyrole unit for</param>
            <returns>List of partyIds for units where user has keyrole</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ContextHandler.GetOedRoleAssignments(System.String,System.String)">
            <summary>
            Gets a list of role assignments between to persons (if exists) from the OED Authz PIP API
            </summary>
            <param name="from">the party which the role assignment provides access on behalf of</param>
            <param name="to">the role assignment recipient party</param>
            <returns>list of OED/Digitalt d�dsbo Role Assignments</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.DelegationChangeEventQueue">
            <inheritdoc />
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationChangeEventQueue.#ctor(Altinn.Platform.Authorization.Services.Interface.IEventMapperService,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.AzureStorageConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.DelegationChangeEventQueue"/> class.
            </summary>
            <param name="eventMapperService">Mapper service responsible for mapping models</param>
            <param name="storageConfig">Azure storage queue config</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationChangeEventQueue.Push(Altinn.Platform.Authorization.Models.DelegationChange)">
            <summary>
            Converts the delegation change to a delegation change event and pushes it to the event queue.
            Throws exception if something fails
            </summary>
            <param name="delegationChange">The delegation change stored in postgresql</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler">
            <summary>
            The delegationg context handler is responsible for updating a context request based on information from informationpoint for a specific delegation.
            In order for the context request to be passed to decision point to be checked for authorization against the delegation policy
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.#ctor(Altinn.Platform.Authorization.Repositories.Interface.IInstanceMetadataRepository,Altinn.Platform.Authorization.Services.Interface.IRoles,Altinn.Platform.Authorization.Services.Interface.IOedRoleAssignmentWrapper,Altinn.Platform.Authorization.Services.Interface.IParties,Altinn.Platform.Authorization.Services.Interface.IProfile,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings},Altinn.Platform.Authorization.Services.Interfaces.IRegisterService,Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler"/> class
            </summary>
            <param name="policyInformationRepository">the policy information repository handler</param>
            <param name="rolesWrapper">the roles handler</param>
            <param name="oedRolesWrapper">the oed roles handler</param>
            <param name="partiesWrapper">the party information handler</param>
            <param name="profileWrapper">the user profile information handler</param>
            <param name="memoryCache">The cache handler </param>
            <param name="settings">The app settings</param>
            <param name="registerService">Register service</param>
            <param name="prp">the policy retrieval point service</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.Enrich(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,System.Collections.Generic.List{System.Int32})">
            <summary>
            Updates needed subject information for the Context Request for a specific delegation
            </summary>
            <param name="request">The original Xacml Context Request</param>
            <param name="subjects">The list of PartyIds to be added as subject attributes</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.GetSubjectUserId(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Gets the user id from the XacmlContextRequest subject attribute
            </summary>
            <param name="request">The Xacml Context Request</param>
            <returns>The user id of the subject</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.GetResourceAttributes(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Gets a XacmlResourceAttributes model from the XacmlContextRequest
            </summary>
            <param name="request">The Xacml Context Request</param>
            <returns>XacmlResourceAttributes model</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.GetMainUnits(System.Int32)">
            <summary>
            Gets the list of mainunits for a subunit
            </summary>
            <param name="subUnitPartyId">The subunit partyIds to check and retrieve mainunits for</param>
            <returns>List of mainunits</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.DelegationContextHandler.GetKeyRolePartyIds(System.Int32)">
            <summary>
            Gets the list of keyrole unit partyIds for a user
            </summary>
            <param name="subjectUserId">The userid to retrieve keyrole unit for</param>
            <returns>List of partyIds for units where user has keyrole</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.EventLogService">
            <summary>
            Implementation for authentication event log
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.EventLogService.#ctor(Altinn.Platform.Authorization.Clients.Interfaces.IEventsQueueClient,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary>
            Instantiation for event log servcie
            </summary>
            <param name="queueClient">queue client to store event in event log</param>
            <param name="systemClock">handler for datetime service</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.EventLogService.CreateAuthorizationEvent(Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent)">
            <summary>
            Queues an authorization event to the logqueue
            </summary>
            <param name="authorizationEvent">authorization event</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.EventLogService.CreateAuthorizationEvent(Microsoft.FeatureManagement.IFeatureManager,Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,Microsoft.AspNetCore.Http.HttpContext,Altinn.Authorization.ABAC.Xacml.XacmlContextResponse)">
            <inheritdoc />
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.EventMapperService">
            <inheritdoc />
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.EventMapperService.MapToDelegationChangeEventList(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.DelegationChange})">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.OedRoleAssignmentWrapper">
            <summary>
            Service implementation for OED Role Assignment integration
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.OedRoleAssignmentWrapper.#ctor(Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Services.Implementation.OedRoleAssignmentWrapper},Altinn.Platform.Authorization.Clients.OedAuthzClient,Altinn.ApiClients.Maskinporten.Interfaces.IMaskinportenService,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.OedAuthzMaskinportenClientSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.RolesWrapper"/> class
            </summary>
            <param name="logger">logger</param>
            <param name="oedAuthzClient">the client handler for OED api</param>
            <param name="maskinportenService">the maskinporten service</param>
            <param name="maskinportenClientSettings">The maskinporten client settings</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.OedRoleAssignmentWrapper.GetOedRoleAssignments(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper">
            <summary>
            Wrapper for the parties api
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.#ctor(Altinn.Platform.Authorization.Clients.PartyClient,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper"/> class
            </summary>
            <param name="partyClient">the client handler for parties api in Bridge</param>
            <param name="logger">The logger</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.GetParties(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.GetParty(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.GetKeyRoleParties(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.GetMainUnits(Altinn.Platform.Authorization.Models.MainUnitQuery)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PartiesWrapper.ValidateSelectedParty(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint">
            <summary>
            The Policy Administration Point responsible for storing and modifying delegation policies
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.#ctor(Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint,Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository,Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository,Altinn.Platform.Authorization.Services.Interface.IDelegationChangeEventQueue,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint"/> class.
            </summary>
            <param name="policyRetrievalPoint">The policy retrieval point</param>
            <param name="policyRepository">The policy repository (blob storage)</param>
            <param name="delegationRepository">The delegation change repository (postgresql)</param>
            <param name="eventQueue">The delegation change event queue service to post events for any delegation change</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.WritePolicyAsync(System.String,System.String,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.TryWriteDelegationPolicyRules(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.TryDeleteDelegationPolicyRules(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.RequestToDelete})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.TryDeleteDelegationPolicies(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.RequestToDelete})">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyAdministrationPoint.ReplayDelegationChangeEvents(System.Int32,System.Int32)">
            <summary>
            Operation for triggering a replay of delegationchange events pushing them to the delegationevents queue for syncronization with Altinn 2.0
            </summary>
            <param name="startId">The first id in the range to replay</param>
            <param name="endId">The last id in the range to replay. If left to 0 all events after the startId will be replayed</param>
            <returns>bool</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.PolicyInformationPoint">
            <summary>
            The Policy Information Point responsible for storing and modifying delegation policies
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyInformationPoint.#ctor(Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint,Altinn.Platform.Authorization.Repositories.Interface.IDelegationMetadataRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.PolicyInformationPoint"/> class.
            </summary>
            <param name="policyRetrievalPoint">The policy retrieval point</param>
            <param name="delegationRepository">The delegation change repository</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyInformationPoint.GetRulesAsync(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint">
            <summary>
            The Policy Retrieval point responsible to find the correct policy
            based on the context Request
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint.#ctor(Altinn.Platform.Authorization.Repositories.Interface.IPolicyRepository,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings},Altinn.Platform.Authorization.Services.Interface.IResourceRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint"/> class.
            </summary>
            <param name="policyRepository">The policy Repository..</param>
            <param name="memoryCache">The cache handler </param>
            <param name="settings">The app settings</param>
            <param name="resourceRegistry">The regis</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint.GetPolicyAsync(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint.GetPolicyAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.PolicyRetrievalPoint.GetPolicyVersionAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.ProfileWrapper">
            <summary>
            Wrapper for the profile api
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ProfileWrapper.#ctor(Altinn.Platform.Authorization.Clients.ProfileClient,Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Services.Implementation.ProfileWrapper})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.ProfileWrapper"/> class
            </summary>
            <param name="profileClient">the client handler for profile api in Bridge</param>
            <param name="logger">The logger</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ProfileWrapper.GetUserProfile(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.ResourceRegistryWrapper">
            <summary>
            Wrapper for resource registry
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ResourceRegistryWrapper.#ctor(Altinn.Platform.Authorization.Clients.ResourceRegistryClient,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.ResourceRegistryWrapper"/> class.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.ResourceRegistryWrapper.GetResourcePolicyAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Implementation.RolesWrapper">
            <summary>
            Wrapper for the roles api
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.RolesWrapper.#ctor(Altinn.Platform.Authorization.Clients.RolesClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.Implementation.RolesWrapper"/> class
            </summary>
            <param name="rolesClient">the client handler for roles api</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Implementation.RolesWrapper.GetDecisionPointRolesForUser(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.RegisterService">
            <summary>
            Handles register service
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.RegisterService.#ctor(System.Net.Http.HttpClient,Microsoft.AspNetCore.Http.IHttpContextAccessor,Altinn.Common.AccessTokenClient.Services.IAccessTokenGenerator,Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.GeneralSettings},Microsoft.Extensions.Options.IOptions{Altinn.Platform.Authorization.Configuration.PlatformSettings},Microsoft.Extensions.Logging.ILogger{Altinn.Platform.Authorization.Services.Interfaces.IRegisterService})">
            <summary>
            Initializes a new instance of the <see cref="T:Altinn.Platform.Authorization.Services.RegisterService"/> class.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.RegisterService.GetParty(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.RegisterService.PartyLookup(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IDelegationChangeEventQueue">
            <summary>
            The service used to map internal delegation change to delegation change events and push them to the event queue.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IDelegationChangeEventQueue.Push(Altinn.Platform.Authorization.Models.DelegationChange)">
            <summary>
            Converts the delegation change to a delegation change event and pushes it to the event queue.
            Throws exception if something fails
            </summary>
            <param name="delegationChange">The delegation change stored in postgresql</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IEventMapperService">
            <summary>
            Service mapping internal delegation changes to delegation change events
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IEventMapperService.MapToDelegationChangeEventList(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.DelegationChange})">
            <summary>
            Maps to DelegationChangeEventList used for pushing delegation events to the event queue
            </summary>
            <param name="delegationChanges">List of delegation changes from postgreSQL</param>
            <returns>DelegationChangeEventList</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IOedRoleAssignmentWrapper">
            <summary>
            Service mapping OED/Digitalt d�dsbo role assignments
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IOedRoleAssignmentWrapper.GetOedRoleAssignments(System.String,System.String)">
            <summary>
            Gets OED/Digitalt d�dsbo role assignments between the deceased party and the inheriting party
            </summary>
            <param name="from">the deceased party</param>
            <param name="to"> the inheriting party</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IParties">
            <summary>
            Interface for actions related to actor
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IParties.GetParties(System.Int32)">
            <summary>
            Method that fetches parties list based on user id
            </summary>
            <param name="userId">The user id</param>
            <returns>list of parties that the logged in user can represent</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IParties.GetParty(System.Int32)">
            <summary>
            Method that fetches a given party
            </summary>
            <param name="partyId">The party id</param>
            <returns>The party</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IParties.GetKeyRoleParties(System.Int32)">
            <summary>
            Method that fetches a list of PartyIds the given user id has key role access to (where the user inherit delegations to their organization)
            </summary>
            <param name="userId">The user id</param>
            <returns>list of PartyIds where the logged in user have key role access</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IParties.GetMainUnits(Altinn.Platform.Authorization.Models.MainUnitQuery)">
            <summary>
            Method that fetches a list of main units for the input list of sub unit partyIds. If any of the input partyIds are not a sub unit the response model will have null values for main unit properties.
            </summary>
            <param name="subunitPartyIds">The list of PartyIds to check and retrieve any main units for</param>
            <returns>list of main units</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IParties.ValidateSelectedParty(System.Int32,System.Int32)">
            <summary>
            Verifies that the selected party is contained in the user's party list
            </summary>
            <param name="userId">The user id"</param>
            <param name="partyId">The party id"</param>
            <returns> Boolean indicating whether or not the user can represent the selected party.</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint">
            <summary>
            Defines the interface for the Policy Administration Point
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint.WritePolicyAsync(System.String,System.String,System.IO.Stream)">
            <summary>
            Returns a bool based on writing file to storage was successful
            </summary>
            <param name="org">Unique identifier of the organisation responsible for the app.</param>
            <param name="app">Application identifier which is unique within an organisation.</param>
            <param name="fileStream">A stream containing the content of the policy file</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint.TryWriteDelegationPolicyRules(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.Rule})">
            <summary>
            Trys to sort and store the set of rules as delegation policy files in blob storage.
            </summary>
            <param name="rules">The set of rules to be delegated</param>
            <returns>The list of rules with created Id and result status</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint.TryDeleteDelegationPolicyRules(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.RequestToDelete})">
            <summary>
            Trys to sort and delete the set of rules matching the list of ruleMatches to delete from delegation policy files in blob storage.
            </summary>
            <param name="rulesToDelete">Entity to define which rules to be deleted</param>
            <returns>The list of rules with created Id and result status</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint.TryDeleteDelegationPolicies(System.Collections.Generic.List{Altinn.Platform.Authorization.Models.RequestToDelete})">
            <summary>
            Deletes a List of policies based on input list of matches to remove
            </summary>
            <param name="policiesToDelete">entity containing match for all the policies to delete</param>
            <returns>A list containing all the policies that is deleted</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyAdministrationPoint.ReplayDelegationChangeEvents(System.Int32,System.Int32)">
            <summary>
            Endpoint for triggering a replay of delegationchange events pushing them to the delegationevents queue for syncronization with Altinn 2.0
            </summary>
            <param name="startId">The first id in the range to replay</param>
            <param name="endId">The last id in the range to replay. If left/set to 0 all events found after the startId will be replayed</param>
            <returns>bool</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IPolicyInformationPoint">
            <summary>
            Defines the required methods for an implementation of a policy information point.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyInformationPoint.GetRulesAsync(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets the rules for a list of org/apps, given by a list of offeredbyPartyIds to a list of coveredbyIds
            </summary>
            <param name="appIds">the org/apps</param>
            <param name="offeredByPartyIds">the list of offeredby party ids</param>
            <param name="coveredByPartyIds">the list of coveredby party ids</param>
            <param name="coveredByUserIds">the list of coveredby user ids</param>
            <returns>a list of rules that match the lists of org/apps, offeredby ids, and coveredby ids</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint">
            <summary>
            Defines the interface for the Policy Retrival Point
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint.GetPolicyAsync(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Returns a policy based on the context request
            </summary>
            <param name="request">The context request</param>
            <returns>XacmlPolicy</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint.GetPolicyAsync(System.String,System.String)">
            <summary>
            Returns a policy based the org and app
            </summary>
            <param name="org">The organisation</param>
            <param name="app">The app</param>
            <returns>XacmlPolicy</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IPolicyRetrievalPoint.GetPolicyVersionAsync(System.String,System.String)">
            <summary>
            Returns a specific version of a policy if it exits on the provided path
            </summary>
            <param name="policyPath">The blobstorage path to the policy file</param>
            <param name="version">The specific blob storage version to get</param>
            <returns>XacmlPolicy and ETag tuple</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IProfile">
            <summary>
            Interface for actions related to profile
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IProfile.GetUserProfile(System.Int32)">
            <summary>
            Method that fetches the user profile for a given user id
            </summary>
            <param name="userId">The user id</param>
            <returns>The user profile</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IResourceRegistry">
            <summary>
            Interface for resource registry
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IResourceRegistry.GetResourcePolicyAsync(System.String)">
            <summary>
            Returns a policy based on the resourceId
            </summary>
            <param name="resourceId">the policyid</param>
            <returns>XacmlPolicy</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interface.IRoles">
            <summary>
            Interface for actions related to roles
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interface.IRoles.GetDecisionPointRolesForUser(System.Int32,System.Int32)">
            <summary>
            Get the decision point roles for the loggedin user for a selected party
            </summary>
            <param name="coveredByUserId">the logged in user id</param>
            <param name="offeredByPartyId">the partyid of the person/org the logged in user is representing</param>
            <returns>list of actors that the logged in user can represent</returns>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interfaces.IEventLog">
            <summary>
            Defines event log interface to queue an authentication event to a storage queue
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interfaces.IEventLog.CreateAuthorizationEvent(Altinn.Platform.Authorization.Models.EventLog.AuthorizationEvent)">
            <summary>
            Creates an authorization event in storage queue
            </summary>
            <param name="authorizationEvent">authorization event</param>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interfaces.IEventLog.CreateAuthorizationEvent(Microsoft.FeatureManagement.IFeatureManager,Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,Microsoft.AspNetCore.Http.HttpContext,Altinn.Authorization.ABAC.Xacml.XacmlContextResponse)">
            <summary>
            Creates an authorization event in storage queue
            </summary>
            <param name="featureManager">the handler to manage feature management</param>
            <param name="contextRequest">the enriched context request</param>
            <param name="context">the http context</param>
            <param name="contextResponse">the decision after the request process</param>
        </member>
        <member name="T:Altinn.Platform.Authorization.Services.Interfaces.IRegisterService">
            <summary>
            Interface to handle services exposed in Platform Register
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interfaces.IRegisterService.GetParty(System.Int32)">
            <summary>
            Returns party information
            </summary>
            <param name="partyId">The partyId</param>
            <returns>The party for the given partyId</returns>
        </member>
        <member name="M:Altinn.Platform.Authorization.Services.Interfaces.IRegisterService.PartyLookup(System.String,System.String)">
            <summary>
            Party lookup
            </summary>
            <param name="orgNo">organisation number</param>
            <param name="person">f or d number</param>
            <returns></returns>
        </member>
        <member name="T:Altinn.Platform.Telemetry.CustomTelemetryInitializer">
            <summary>
            Set up custom telemetry for Application Insights
            </summary>
        </member>
        <member name="M:Altinn.Platform.Telemetry.CustomTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Custom TelemetryInitializer that sets some specific values for the component
            </summary>
        </member>
        <member name="T:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions">
            <summary>
            Helper methods to extend ClaimsPrincipal. 
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions.GetUserOrOrgId(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Gets the userId or the orgNumber or null if neither claims are present.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions.GetOrg(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get the org identifier string or null if it is not an org.
            </summary>        
        </member>
        <member name="M:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions.GetOrgNumber(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Returns the organisation number of an org user or null if claim does not exist.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions.GetUserIdAsInt(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Return the userId as an int or null if UserId claim is not set
            </summary>
        </member>
        <member name="M:Altinn.Platform.Authenticaiton.Extensions.ClaimsPrincipalExtensions.GetAuthenticationLevel(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Returns the authentication level of the user.
            </summary>
        </member>
        <member name="T:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler">
            <summary>
            Defines Interface for the Delegation Context Handler.
            </summary>
        </member>
        <member name="M:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler.Enrich(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest,System.Collections.Generic.List{System.Int32})">
            <summary>
            Updates needed subject information for the Context Request for a specific delegation
            </summary>
            <param name="request">The original Xacml Context Request</param>
            <param name="subjects">The list of PartyIds to be added as subject attributes</param>
        </member>
        <member name="M:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler.GetSubjectUserId(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Gets the user id from the XacmlContextRequest subject attribute
            </summary>
            <param name="request">The Xacml Context Request</param>
            <returns>The user id of the subject</returns>
        </member>
        <member name="M:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler.GetResourceAttributes(Altinn.Authorization.ABAC.Xacml.XacmlContextRequest)">
            <summary>
            Gets a XacmlResourceAttributes model from the XacmlContextRequest
            </summary>
            <param name="request">The Xacml Context Request</param>
            <returns>XacmlResourceAttributes model</returns>
        </member>
        <member name="M:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler.GetMainUnits(System.Int32)">
            <summary>
            Gets the list of mainunits for a subunit
            </summary>
            <param name="subUnitPartyId">The subunit partyId to check and retrieve mainunits for</param>
            <returns>List of mainunits</returns>
        </member>
        <member name="M:Altinn.Authorization.ABAC.Interface.IDelegationContextHandler.GetKeyRolePartyIds(System.Int32)">
            <summary>
            Gets the list of keyrole unit partyIds for a user
            </summary>
            <param name="subjectUserId">The userid to retrieve keyrole unit for</param>
            <returns>List of partyIds for units where user has keyrole</returns>
        </member>
    </members>
</doc>
