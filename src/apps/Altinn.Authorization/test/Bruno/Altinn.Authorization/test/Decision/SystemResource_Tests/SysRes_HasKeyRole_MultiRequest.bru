meta {
  name: SysRes_HasKeyRole_MultiRequest
  type: http
  seq: 9
}

post {
  url: {{baseUrl}}/authorization/api/v1/decision
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Ocp-Apim-Subscription-Key: {{apimSubscriptionKey}}
}

body:json {
  /*
  See Docs tab for test case description
  */
  {
    "Request": {
      "ReturnPolicyIdList": true,
      "AccessSubject": [
        {
          "Id": "s1",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:userid",
              "Value": "{{subjectUserId}}"
            }
          ]
        }
      ],
      "Action": [
        {
          "Id": "a1",
          "Attribute": [
            {
              "AttributeId": "urn:oasis:names:tc:xacml:1.0:action:action-id",
              "Value": "access",
              "DataType": "http://www.w3.org/2001/XMLSchema#string",
              "IncludeInResult": false
            }
          ]
        }
      ],
      "Resource": [
        {
          "Id": "r1",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:resource",
              "Value": "altinn_keyrole_access",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            },
            {
              "AttributeId": "urn:altinn:organization:identifier-no",
              "Value": "{{resourceOrg1Permit}}",
              "DataType": "http://www.w3.org/2001/XMLSchema#string",
              "IncludeInResult": true
            }
          ]
        },
        {
          "Id": "r2",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:resource",
              "Value": "altinn_keyrole_access",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            },
            {
              "AttributeId": "urn:altinn:organization:identifier-no",
              "Value": "{{resourceOrg2NotApplicable}}",
              "DataType": "http://www.w3.org/2001/XMLSchema#string",
              "IncludeInResult": true
            }
          ]
        },
        {
          "Id": "r3",
          "Attribute": [
            {
              "AttributeId": "urn:altinn:resource",
              "Value": "altinn_keyrole_access",
              "DataType": "http://www.w3.org/2001/XMLSchema#string"
            },
            {
              "AttributeId": "urn:altinn:organization:identifier-no",
              "Value": "{{resourceOrg3NotApplicable}}",
              "DataType": "http://www.w3.org/2001/XMLSchema#string",
              "IncludeInResult": true
            }
          ]
        }
      ],
      "MultiRequests": {
        "RequestReference": [
          {
            "ReferenceId": [
              "s1",
              "a1",
              "r1"
            ]
          },
          {
            "ReferenceId": [
              "s1",
              "a1",
              "r2"
            ]
          },
          {
            "ReferenceId": [
              "s1",
              "a1",
              "r3"
            ]
          }
        ]
      }
    }
  }
}

script:pre-request {
  const testdata = require(`./testdata/Authorization/${bru.getEnvVar("tokenEnv")}.json`);
  
  bru.setVar("requestName", "SysRes_HasKeyRole_MultiRequest");
  bru.setVar("subjectUserId", testdata.org1.dagl.userid);
  bru.setVar("resourceOrg1Permit", testdata.org1.orgno);
  bru.setVar("resourceOrg2NotApplicable", testdata.org2.orgno);
  bru.setVar("resourceOrg3NotApplicable", testdata.org3.orgno);
  
}

tests {
  test("Decision_" + bru.getVar("requestName"), function() {
    const data = res.getBody();
    expect(res.status).to.equal(200);
    expect(data.response[0]).to.have.property('decision', "Permit");
    expect(data.response[1]).to.have.property('decision', "NotApplicable");
    expect(data.response[2]).to.have.property('decision', "NotApplicable");
  });
}
