@page "/entities/"
@inject IEntityService entityData


<PageTitle>Entities</PageTitle>

<PageHeader>
    <LeftContent>
        <H1>Entities</H1>
    </LeftContent>
    <RightContent>
        @*  <button @onclick=@(() => Flyouts.ToggleFlyout("edit"))>Edit</button>
        <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Resource</button>
        <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Tags</button>
        <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Translation</button> *@
        
        <input @bind-value="SearchTerm" @oninput=HandleInputTextInput></input>
    </RightContent>
</PageHeader>




    @if(Entities != null && Entities.Any())
    {
        <H4>Result : @PagedResult.ItemCount</H4>
        <Accordion>
            @foreach(var entity in Entities)
            {
                <ListItem Title="@entity.Name" Url=@($"/entity/{entity.Id}") Tags=@([entity.Variant.Name])></ListItem>
            }
        </Accordion>

    <PaginationBar PageCount="PagedResult.PageCount" VisiblePageCount="3" @bind-CurrentPage="PagedResult.CurrentPage" PageChanged="LoadData"></PaginationBar>

    }


@code {
    public string SearchTerm { get; set; } = "";


    public PagedResult PagedResult { get; set; } = new PagedResult();
    public List<ExtEntity> Entities { get; set; } = new List<ExtEntity>();

    private async Task HandleInputTextInput(ChangeEventArgs e)
    {
        SearchTerm = e.Value?.ToString() ?? "";
        await LoadData(1);
    }

    private async Task LoadData(int page)
    {
        if(SearchTerm.Length < 2)
        {
            return;
        }
        var opt = UserData.GetRequestOptions();

        opt.UsePaging = true;
        opt.PageNumber = page;
        opt.PageSize = 20;

        var res = await entityData.ExtendedRepo.SearchExtended(SearchTerm, opt, true);
        if(res.Data == null)
        {
            Entities = new List<ExtEntity>();
            PagedResult = new PagedResult();
            return;
        }
        else
        {
            PagedResult = res.PageInfo;
            Entities = res.Data.ToList();
        }
    }

    protected async override Task OnParametersSetAsync()
    {
        await LoadData(1);

    }

}
