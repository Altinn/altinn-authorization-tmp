@page "/entitytype/{Id:guid}"
@inject IEntityTypeService entityTypeData
@inject IEntityVariantService variantData
@inject IRoleService roleData


@if(EntityType != null)
{   
    <PageTitle>EntityType - @EntityType.Name</PageTitle>

    <PageHeader>
        <LeftContent>
            <BreadcrumbContainer>
                <BreadcrumbItem Url=@($"/entitytype")>Entity Types</BreadcrumbItem>
                <BreadcrumbItem Url=@($"/entitytype/{EntityType.Id}")>@EntityType.Name</BreadcrumbItem>
            </BreadcrumbContainer>
            <H1>@EntityType.Name</H1>
        </LeftContent>
        <RightContent>
          @*   <button @onclick=@(() => Flyouts.ToggleFlyout("edit"))>Edit</button>
            <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Resource</button>
            <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Tags</button>
            <button @onclick=@(() => Flyouts.ToggleFlyout("newPackageResource"))>Translation</button> *@
        </RightContent>
    </PageHeader>

    <Grid Medium="2">
    
        @if(Variants != null && Variants.Any())
        {
        <div>
            <h3>Variants</h3>
                <table class="bf-table bfc-base-3-bg">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var variant in Variants.OrderBy(t => t.Name))
                    {
                            <tr class="bf-table-row bf-table-row-compact">
                            <td><a href=@($"/entityvariant/{variant.Id}")>@variant.Name</a></td>
                            <td>@variant.Description</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        }



        @if (Roles != null && Roles.Any())
        {
            <div>
                <h3>Roles</h3>
                <table class="bf-table bfc-base-3-bg">
                    <thead>
                        <tr>
                            <th>Code</th>
                            <th>Name</th>
                            <th>Eier</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var role in Roles.OrderByDescending(t => t.Provider.Name).ThenBy(t => t.Name))
                        {
                            <tr class="bf-table-row bf-table-row-compact">
                                <td>@role.Code</td>
                                <td><a href=@($"/role/{role.Id}")>@role.Name</a></td>
                                <td>@role.Provider.Name</td>
                                <td>@role.Description</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        

    </Grid>

}
@code {

    [Parameter] public Guid Id { get; set; }
    public ExtEntityType EntityType { get; set; }
    public List<ExtEntityVariant> Variants { get; set; }

    public List<ExtRole> Roles { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        var opt = UserData.GetRequestOptions();

        EntityType = await entityTypeData.GetExtended(Id, options: opt);
        if(EntityType !=  null)
        {
            Variants = [.. await variantData.GetExtended("TypeId", EntityType.Id, options: opt)];
            Roles = [.. await roleData.GetExtended("EntityTypeId", EntityType.Id, options: opt)];
        }
    }


}
