@namespace Styx
<span class="@ClassStyle()" title=@Title>@ChildContent</span>
@code {

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public BadgeState State { get; set; } = BadgeState.Theme;
    [Parameter] public bool Inverted { get; set; }
    [Parameter] public bool Pill { get; set; }

    public enum BadgeState { Theme, Success, Warning, Alert, Attn, Chill, Dimmed };

    public string ClassStyle()
    {
        string res = "bf-badge";
        switch (State)
        {
            case BadgeState.Theme:
                res += Inverted ? " bfc-theme-bg" : " bfc-theme-fade-bg";
                break;
            case BadgeState.Success:
                res += Inverted ? " bfc-success-bg" : " bfc-success-fade-bg";
                break;
            case BadgeState.Warning:
                res += Inverted ? " bfc-warning-bg" : " bfc-warning-fade-bg";
                break;
            case BadgeState.Alert:
                res += Inverted ? " bfc-alert-bg" : " bfc-alert-fade-bg";
                break;
            case BadgeState.Attn:
                res += Inverted ? " bfc-base-c-attn-bg" : " bfc-attn-c-bg";
                break;
            case BadgeState.Chill:
                res += Inverted ? " bfc-base-c-chill-bg" : " bfc-chill-c-bg";
                break;
            case BadgeState.Dimmed:
                res += Inverted ? " bfc-base-c-2-bg" : " bfc-dimmed-bg";
                break;
        }

        if (Pill)
        {
            res += " bf-badge-pill";
        }

        return res;
    }

}
