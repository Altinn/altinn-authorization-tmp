// <auto-generated />
using System;
using Altinn.AccessMgmt.PersistenceEF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Altinn.AccessMgmt.PersistenceEF.Migrations
{
    [DbContext(typeof(BasicDbContext))]
    [Migration("20250623111958_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("groupid");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text")
                        .HasColumnName("iconurl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Urn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urn");

                    b.HasKey("Id")
                        .HasName("pk_area");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_area_name");

                    b.ToTable("area", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.AreaGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("EntityTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("entitytypeid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Urn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urn");

                    b.HasKey("Id")
                        .HasName("pk_areagroup");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_areagroup_name");

                    b.ToTable("areagroup", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uuid")
                        .HasColumnName("fromid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("roleid");

                    b.Property<Guid>("ToId")
                        .HasColumnType("uuid")
                        .HasColumnName("toid");

                    b.HasKey("Id")
                        .HasName("pk_assignment");

                    b.HasIndex("FromId", "ToId", "RoleId")
                        .IsUnique()
                        .HasDatabaseName("ix_assignment_fromid_toid_roleid");

                    b.ToTable("assignment", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.AssignmentPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AssignmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("assignmentid");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageid");

                    b.HasKey("Id")
                        .HasName("pk_assignmentpackage");

                    b.HasIndex("AssignmentId", "PackageId")
                        .IsUnique()
                        .HasDatabaseName("ix_assignmentpackage_assignmentid_packageid");

                    b.ToTable("assignmentpackage", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.AssignmentResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AssignmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("assignmentid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resourceid");

                    b.HasKey("Id")
                        .HasName("pk_assignmentresource");

                    b.HasIndex("AssignmentId", "ResourceId")
                        .IsUnique()
                        .HasDatabaseName("ix_assignmentresource_assignmentid_resourceid");

                    b.ToTable("assignmentresource", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Delegation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("FacilitatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("facilitatorid");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uuid")
                        .HasColumnName("fromid");

                    b.Property<Guid>("ToId")
                        .HasColumnType("uuid")
                        .HasColumnName("toid");

                    b.HasKey("Id")
                        .HasName("pk_delegation");

                    b.HasIndex("FromId", "ToId", "FacilitatorId")
                        .IsUnique()
                        .HasDatabaseName("ix_delegation_fromid_toid_facilitatorid");

                    b.ToTable("delegation", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.DelegationPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DelegationId")
                        .HasColumnType("uuid")
                        .HasColumnName("delegationid");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageid");

                    b.HasKey("Id")
                        .HasName("pk_delegationpackage");

                    b.HasIndex("DelegationId", "PackageId")
                        .IsUnique()
                        .HasDatabaseName("ix_delegationpackage_delegationid_packageid");

                    b.ToTable("delegationpackage", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.DelegationResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DelegationId")
                        .HasColumnType("uuid")
                        .HasColumnName("delegationid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resourceid");

                    b.HasKey("Id")
                        .HasName("pk_delegationresource");

                    b.HasIndex("DelegationId", "ResourceId")
                        .IsUnique()
                        .HasDatabaseName("ix_delegationresource_delegationid_resourceid");

                    b.ToTable("delegationresource", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parentid");

                    b.Property<string>("RefId")
                        .HasColumnType("text")
                        .HasColumnName("refid");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("typeid");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variantid");

                    b.HasKey("Id")
                        .HasName("pk_entity");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_entity_name");

                    b.ToTable("entity", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.EntityLookup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnName("entityid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_entitylookup");

                    b.HasIndex("EntityId", "Key")
                        .IsUnique()
                        .HasDatabaseName("ix_entitylookup_entityid_key");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("EntityId", "Key"), new[] { "Value", "Id" });

                    b.ToTable("entitylookup", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("providerid");

                    b.HasKey("Id")
                        .HasName("pk_entitytype");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_entitytype_name");

                    b.ToTable("entitytype", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.EntityVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("pk_entityvariant");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_entityvariant_name");

                    b.ToTable("entityvariant", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.EntityVariantRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("roleid");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variantid");

                    b.HasKey("Id")
                        .HasName("pk_entityvariantrole");

                    b.HasIndex("VariantId", "RoleId")
                        .IsUnique()
                        .HasDatabaseName("ix_entityvariantrole_variantid_roleid");

                    b.ToTable("entityvariantrole", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uuid")
                        .HasColumnName("areaid");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("EntityTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("entitytypeid");

                    b.Property<bool>("HasResources")
                        .HasColumnType("boolean")
                        .HasColumnName("hasresources");

                    b.Property<bool>("IsAssignable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isassignable");

                    b.Property<bool>("IsDelegable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdelegable");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("providerid");

                    b.Property<string>("Urn")
                        .HasColumnType("text")
                        .HasColumnName("urn");

                    b.HasKey("Id")
                        .HasName("pk_package");

                    b.HasIndex("ProviderId", "Name")
                        .IsUnique()
                        .HasDatabaseName("ix_package_providerid_name");

                    b.ToTable("package", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.PackageResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageid");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resourceid");

                    b.HasKey("Id")
                        .HasName("pk_packageresource");

                    b.HasIndex("PackageId", "ResourceId")
                        .IsUnique()
                        .HasDatabaseName("ix_packageresource_packageid_resourceid");

                    b.ToTable("packageresource", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logourl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("refid");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("pk_provider");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_provider_name");

                    b.ToTable("provider", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.ProviderType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_providertype");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_providertype_name");

                    b.ToTable("providertype", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("providerid");

                    b.Property<string>("RefId")
                        .HasColumnType("text")
                        .HasColumnName("refid");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("pk_resource");

                    b.ToTable("resource", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.ResourceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_resourcetype");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_resourcetype_name");

                    b.ToTable("resourcetype", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("EntityTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("entitytypeid");

                    b.Property<bool>("IsAssignable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isassignable");

                    b.Property<bool>("IsKeyRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("iskeyrole");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("providerid");

                    b.Property<string>("Urn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urn");

                    b.HasKey("Id")
                        .HasName("pk_role");

                    b.HasIndex("Urn")
                        .IsUnique()
                        .HasDatabaseName("ix_role_urn");

                    b.HasIndex("ProviderId", "Code")
                        .IsUnique()
                        .HasDatabaseName("ix_role_providerid_code");

                    b.HasIndex("ProviderId", "Name")
                        .IsUnique()
                        .HasDatabaseName("ix_role_providerid_name");

                    b.ToTable("role", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.RoleLookup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("roleid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_rolelookup");

                    b.HasIndex("RoleId", "Key")
                        .IsUnique()
                        .HasDatabaseName("ix_rolelookup_roleid_key");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("RoleId", "Key"), new[] { "Value", "Id" });

                    b.ToTable("rolelookup", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.RoleMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("GetRoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("getroleid");

                    b.Property<Guid>("HasRoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("hasroleid");

                    b.HasKey("Id")
                        .HasName("pk_rolemap");

                    b.HasIndex("HasRoleId", "GetRoleId")
                        .IsUnique()
                        .HasDatabaseName("ix_rolemap_hasroleid_getroleid");

                    b.ToTable("rolemap", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.RolePackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("CanAssign")
                        .HasColumnType("boolean")
                        .HasColumnName("canassign");

                    b.Property<bool>("CanDelegate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("candelegate");

                    b.Property<Guid?>("EntityVariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("entityvariantid");

                    b.Property<bool>("HasAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("hasaccess");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("roleid");

                    b.HasKey("Id")
                        .HasName("pk_rolepackage");

                    b.HasIndex("RoleId", "PackageId")
                        .IsUnique()
                        .HasDatabaseName("ix_rolepackage_roleid_packageid");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("RoleId", "PackageId"), new[] { "EntityVariantId" });

                    b.ToTable("rolepackage", "dbo");
                });

            modelBuilder.Entity("Altinn.AccessMgmt.Core.Models.RoleResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resourceid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("roleid");

                    b.HasKey("Id")
                        .HasName("pk_roleresource");

                    b.HasIndex("RoleId", "ResourceId")
                        .IsUnique()
                        .HasDatabaseName("ix_roleresource_roleid_resourceid");

                    b.ToTable("roleresource", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
