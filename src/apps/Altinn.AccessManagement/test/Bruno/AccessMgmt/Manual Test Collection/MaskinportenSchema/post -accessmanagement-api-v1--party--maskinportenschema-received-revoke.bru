meta {
  name: post -accessmanagement-api-v1--party--maskinportenschema-received-revoke
  type: http
  seq: 6
}

post {
  url: {{baseUrl}}/accessmanagement/api/v1/{{party}}/maskinportenschema/received/revoke
  body: json
  auth: inherit
}

headers {
  Authorization: {{apiKey}}
}

body:json {
  {
    "from": [
      {
        "id": "urn:altinn:organizationnumber",
        "value": "{{from_orgno}}"
      }
    ],
    "rights": [
      {
        "resource":
        [
          {
            "id": "urn:altinn:resource",
            "value": "ttd-am-k6"
          }
        ]
      }
    ]
  }
}

vars:pre-request {
  scope: altinn:instances.read
  auth_tokenType: Personal
  auth_userId: 
  auth_scopes: altinn:instances.read
  auth_partyId: 
  auth_ssn: 
  party: 
  to_orgno: 
}

script:pre-request {
  const testdata = require(`./Testdata/maskinportenschema/${bru.getEnvVar("tokenEnv")}testdata.json`);
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  bru.setVar("from_orgno", testdata.org1.orgno);
  bru.setVar("party", testdata.org2.partyid);
  
  var getTokenParameters = {
    auth_userId: testdata.org2.dagl.userid,
    auth_partyId: testdata.org2.dagl.partyid,
    auth_partyUuid: testdata.org2.dagl.useruuid,
    auth_ssn: testdata.org2.dagl.pid,
    party: testdata.org2.partyid,
    scope: sharedtestdata.scopes.read,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.read
  }
    const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
}
