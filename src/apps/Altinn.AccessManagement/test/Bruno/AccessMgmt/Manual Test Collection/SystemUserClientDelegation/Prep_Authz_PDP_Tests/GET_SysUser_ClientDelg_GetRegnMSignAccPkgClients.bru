meta {
  name: GET_SysUser_ClientDelg_GetRegnMSignAccPkgClients
  type: http
  seq: 12
}

get {
  url: {{baseUrl}}/accessmanagement/api/v1/internal/systemuserclientdelegation/clients?party={{party}}&packages=regnskapsforer-med-signeringsrettighet&packages=regnskapsforer-uten-signeringsrettighet
  body: json
  auth: inherit
}

params:query {
  party: {{party}}
  packages: regnskapsforer-med-signeringsrettighet
  packages: regnskapsforer-uten-signeringsrettighet
  ~roles: regnskapsforer
  ~packages: skatt-naering
}

headers {
  Content-Type: application/json
  Accept: application/json
}

script:pre-request {
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  const testdata = require(`./Testdata/systemuser-clientdelegation/${bru.getEnvVar("tokenEnv")}.json`);
  
  bru.setVar("requestName", "GET_SysUser_ClientDelg_GetRegnMSignAccPkgClients");
  bru.setVar("party", testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.partyUuid);
  bru.setVar("systemUser", testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.systemuser.partyUuid);
  
  var getTokenParameters = {
    auth_userId: testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.dagligleder.userId,
    auth_partyId: testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.dagligleder.partyId,
    auth_partyUuid: testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.dagligleder.partyUuid,
    auth_ssn: testdata.REGN_ULASTELIG_RETTFERDIG_TIGER.dagligleder.pid,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.portalEnduser
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  bru.setVar("bearerToken",  token);
}

tests {
  test("Should return 200 OK", function() {
    expect(res.status).to.equal(200);
  });
}
