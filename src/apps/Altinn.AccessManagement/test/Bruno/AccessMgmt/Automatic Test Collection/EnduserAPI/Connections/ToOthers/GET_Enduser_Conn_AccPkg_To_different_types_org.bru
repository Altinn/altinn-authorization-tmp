meta {
  name: GET_Enduser_Conn_AccPkg_To_different_types_org
  type: http
  seq: 14
}

get {
  url: {{baseUrl}}/accessmanagement/api/v1/enduser/connections?party={{party}}&from={{party}}&to={{toOrg}}
  body: json
  auth: inherit
}

params:query {
  party: {{party}}
  from: {{party}}
  to: {{toOrg}}
  ~package: {{package}}
}

headers {
  Accept: application/json
}

script:pre-request {
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  const testdata = require(`./Testdata/enduser/${bru.getEnvVar("tokenEnv")}.json`);
  
  bru.setVar("party", testdata.org1_delegates_tilgangspakke.partyuuid);
  bru.setVar("toOrg", testdata.org2_delegates_tilgangspakke.partyuuid);
  bru.setVar("package", testdata.package_to_delegate.package_urn);
  
  var getTokenParameters = {
    auth_userId: testdata.org1_delegates_tilgangspakke.dagligleder.userid,
    auth_partyId: testdata.org1_delegates_tilgangspakke.dagligleder.partyid,
    auth_partyUuid: testdata.org1_delegates_tilgangspakke.dagligleder.partyuuid,
    auth_ssn: testdata.org1_delegates_tilgangspakke.dagligleder.pid,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.portalEnduser
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  bru.setVar("bearerToken",  token);
}

tests {
  test("GET Org-2 as rettighetshaver after being added from Org-1 for delegation  : ToOthers", function() {
    const testdata = require(`./Testdata/enduser/${bru.getEnvVar("tokenEnv")}.json`);
     const data = res.getBody();
      expect(res.status).to.equal(200);
    });
}
