meta {
  name: POST_Enduser_Conn_HADM_AccPcks_Delegation
  type: http
  seq: 20
}

post {
  url: {{baseUrl}}/accessmanagement/api/v1/enduser/connections/accesspackages?party={{party}}&from={{party}}&to={{toOrg}}&package={{package}}
  body: none
  auth: inherit
}

params:query {
  party: {{party}}
  from: {{party}}
  to: {{toOrg}}
  package: {{package}}
  ~packageId: {{package}}
}

headers {
  Accept: application/json
}

script:pre-request {
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  const testdata = require(`./Testdata/enduser/${bru.getEnvVar("tokenEnv")}.json`);
  
  bru.setVar("party", testdata.org1_delegates_tilgangspakke.partyuuid);
  bru.setVar("toOrg", testdata.org2_delegates_tilgangspakke.partyuuid);
  bru.setVar("package", testdata.org1_delegates_tilgangspakke.hadm_delegert_package);
  
  var getTokenParameters = {
    auth_userId: testdata.org1_delegates_tilgangspakke.hovedadministrator.userid,
    auth_partyId: testdata.org1_delegates_tilgangspakke.hovedadministrator.partyid,
    auth_partyUuid: testdata.org1_delegates_tilgangspakke.hovedadministrator.partyuuid,
    auth_ssn: testdata.org1_delegates_tilgangspakke.hovedadministrator.pid,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.portalEnduser
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  bru.setVar("bearerToken",  token);
}

script:post-response {
  const data = res.getBody();
  const packageId = data.packageId;
  bru.setEnvVar("packageId", packageId)
}

tests {
  test("Delegate access package from org1 to org2", function() {
    const data = res.getBody();
    var packageId = bru.getEnvVar("packageId");
    
    expect(res.status).to.equal(200);
    expect(data).to.have.property('packageId', packageId);
    
  });
}
