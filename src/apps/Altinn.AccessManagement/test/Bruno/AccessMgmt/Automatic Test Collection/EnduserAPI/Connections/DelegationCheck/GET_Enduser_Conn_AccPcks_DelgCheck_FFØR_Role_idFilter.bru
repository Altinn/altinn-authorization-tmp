meta {
  name: GET_Enduser_Conn_AccPcks_DelgCheck_FFØR_Role_idFilter
  type: http
  seq: 8
}

get {
  url: {{baseUrl}}/accessmanagement/api/v1/enduser/connections/accesspackages/delegationcheck?party={{party}}&packageIds=0195efb8-7c80-7cf2-bcc8-720a3fb39d44
  body: json
  auth: inherit
}

params:query {
  party: {{party}}
  packageIds: 0195efb8-7c80-7cf2-bcc8-720a3fb39d44
  ~packageIds: 
}

headers {
  Accept: application/json
}

script:pre-request {
  const testdata = require(`./Testdata/systemuser-clientdelegation/${bru.getEnvVar("tokenEnv")}.json`);
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  
  bru.setVar("party", testdata.brl_type_client_org.partyuuid);
  
  var getTokenParameters = {
    auth_userId: testdata.regnskapsforer.dagl.userid,
    auth_partyId: testdata.regnskapsforer.dagl.partyid,
    auth_partyUuid: testdata.regnskapsforer.dagl.partyuuid,
    auth_ssn: testdata.regnskapsforer.dagl.pid,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.portalEnduser
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  bru.setVar("bearerToken",  token);
}

tests {
  test("Negative : DelegationCheck for FFØR package which is not direct delegable", function() {
    const body = res.getBody();
    const data = body.data;
    
    expect(res.status).to.equal(200);
    expect(data[0].result).to.equal(false)
    
    
  });
}
