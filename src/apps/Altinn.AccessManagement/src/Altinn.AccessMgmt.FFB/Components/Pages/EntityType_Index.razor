@page "/entitytype"
@inject IEntityTypeRepository typeData

<PageTitle>Entity Types</PageTitle>

@if(EntityTypes != null)
{
    <PageHeader>
        <LeftContent>
            <BreadcrumbContainer>
                <BreadcrumbItem Url=@($"/entitytype")>Entity Types</BreadcrumbItem>
            </BreadcrumbContainer>
            <H1>Entity Types</H1>
        </LeftContent>
        <RightContent>
        </RightContent>
    </PageHeader>


<div>
    <h3>EntityTypes</h3>
        <table class="bf-table bfc-base-3-bg">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Provider</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var type in EntityTypes.OrderBy(t => t.Name))
                {
                    <tr class="bf-table-row bf-table-row-compact">
                            <td><a href=@($"/entitytype/{type.Id}")>@type.Name</a></td>
                            <td><a href=@($"/provider/{type.Provider.Id}")>@type.Provider.Name</a></td>
                    </tr>
                }
            </tbody>
        </table>
</div>

}

@code {

    public List<ExtEntityType> EntityTypes { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        var opt = UserData.GetRequestOptions();
        EntityTypes = [.. (await typeData.GetExtended(options: opt)).Data ?? new List<ExtEntityType>()];
    }


}
