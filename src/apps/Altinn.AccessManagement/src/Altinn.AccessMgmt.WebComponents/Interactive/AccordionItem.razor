<div class="bf-accordion-item @(IsOpen ? "bf-accordion-item-active" : "")">
    <div class="bf-accordion-item-title">
        <button type="button" @onclick="() => Toggle()">
            <span class="bf-accordion-item-angle-circle">
                <i class="fa-solid fa-angle-right fa-fw bf-accordion-item-angle"></i>
            </span>
            <span>
                @if (!string.IsNullOrEmpty(Icon))
                {
                    <Icon Name="@Icon"></Icon><span>&nbsp;</span>
                }
                @Title
            </span>
            <div style="display: flex; gap: 6px; padding: 0 6px;">
                @foreach (var tag in Tags)
                {
                    <span class="bf-badge bfc-theme-bg bf-badge-compact">@tag</span>
                }
            </div>
            <div>
                @if (!string.IsNullOrEmpty(Url))
                {
                    <a href="@Url">
                        <i class="fa-solid fa-arrow-up-right-from-square"></i>
                    </a>
                }
            </div>

        </button>
    </div>
    <div class="bf-expand @(ShowContent() ? "" : "bf-expand-closed")">
        <div>
            <div class="bf-accordion-item-content">
                @ChildContent
            </div>
        </div>
    </div>    
</div>

@code {

    [CascadingParameter] public Accordion Parent { get; set; }

    [Parameter] public string Title { get; set; }
    [Parameter] public string Icon { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool IsOpen { get; set; } = false;
    [Parameter] public string Url { get; set; }
    [Parameter] public List<string> Tags { get; set; } = new List<string>();

    protected override void OnParametersSet()
    {
        if (IsOpen)
        {
            Parent.SetActiveItem(Title);
        }
    }

    private bool ShowContent() => IsOpen ? Parent.MultiOpen || Parent.MultiOpen == false && Parent.ActiveItem == Title : false;

    protected void Toggle()
    {
        IsOpen = !IsOpen;
        if (IsOpen)
        {
            Parent.SetActiveItem(Title);
        }
    }

}
