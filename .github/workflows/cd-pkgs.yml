name: "CD: Pkgs"

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - id: release
        uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: release-please-manifest.json

      - name: Log release output
        env:
          RELEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: 'echo "Release output: $RELEASE_OUTPUT"'

    outputs:
      release_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      full: ${{ toJSON(steps.release.outputs) }}

  publish-artifact:
    name: Create Artifact
    runs-on: ubuntu-latest
    if: needs.release-please.outputs.release_created == 'true'
    needs: release-please

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        path: ${{fromJson(needs.release-please.outputs.paths_released)}}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Set Package Name
        run: echo "package=$(basename ${{ matrix.path }})" >> $GITHUB_ENV

      - name: Build
        working-directory: ${{ matrix.path }}
        run: dotnet build -c Release

      - name: Test
        working-directory: ${{ matrix.path }}
        run: dotnet test -c Release --no-build

      - name: Pack
        working-directory: ${{ matrix.path }}
        run: dotnet pack -c Release --no-build

      - name: Publish Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ env.package }}
          path: ${{ matrix.path }}/artifacts

  publish-github:
    name: Publish GitHub
    environment: prod
    runs-on: ubuntu-latest
    needs: publish-artifact
    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        path: ${{fromJson(needs.release-please.outputs.paths_released)}}

    steps:
      - name: Set Package Name
        run: echo "package=$(basename ${{ matrix.path }})" >> $GITHUB_ENV

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ env.package }}
          path: .

      - name: Install .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget add source --username Altinn --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Altinn/index.json"
          dotnet nuget push ${{ env.package }}/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"

  publish-nuget:
    name: Publish NuGet
    environment: prod
    runs-on: ubuntu-latest
    needs: publish-artifact
    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        path: ${{fromJson(needs.release-please.outputs.paths_released)}}

    steps:
      - name: Set Package Name
        run: echo "package=$(basename ${{ matrix.path }})" >> $GITHUB_ENV

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ env.package }}
          path: .

      - name: Install .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push ${{ env.package }}/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_APIKEY }} --source "https://api.nuget.org/v3/index.json"
