name: "Template: Deploy app"

on:
  workflow_call:
    inputs:
      name:
        required: true
        description: Name of the app
        type: string

      path:
        required: true
        description: Path to the app
        type: string

      terraform:
        description: Whether to deploy terraform
        type: boolean
        default: false

      terraformStateFile:
        description: Path to the terraform state file
        type: string

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    name: Build and Push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      image: ${{ steps.img.outputs.image }}
      tag: ${{ steps.img.outputs.tag }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        name: Checkout repository

      - name: Install .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
          run_install: |
            - cwd: .github/scripts
              args: [--frozen-lockfile]
            - args: [--global, tsx]

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        name: Login to ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push ${{ inputs.name }}
        id: img
        run: tsx ./.github/scripts/build-push-app.mts "${{ inputs.name }}"

      - name: Print outputs
        env:
          IMAGE: ${{ steps.img.outputs.image }}
          TAG: ${{ steps.img.outputs.tag }}
        run: |
          echo "Image: ${IMAGE}"
          echo "Tag: ${TAG}"

  deploy-terraform-test:
    name: Terraform
    if: inputs.terraform
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        environment: [at22, at23, at24, yt01]
    needs:
      - build-push

    uses: ./.github/workflows/_deploy-app-terraform.yml
    with:
      environment: ${{ matrix.environment }}
      working_dir: ${{ inputs.path }}/infra
      tf_state: ${{ inputs.terraformStateFile }}

  deploy-terraform-staging:
    name: Terraform
    if: inputs.terraform
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        environment: [tt02]
    needs:
      - deploy-terraform-test

    uses: ./.github/workflows/_deploy-app-terraform.yml
    with:
      environment: ${{ matrix.environment }}
      working_dir: ${{ inputs.path }}/infra
      tf_state: ${{ inputs.terraformStateFile }}

  deploy-terraform-prod:
    name: Terraform
    if: inputs.terraform
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        environment: [prod]
    needs:
      - deploy-terraform-staging

    uses: ./.github/workflows/_deploy-app-terraform.yml
    with:
      environment: ${{ matrix.environment }}
      working_dir: ${{ inputs.path }}/infra
      tf_state: ${{ inputs.terraformStateFile }}
