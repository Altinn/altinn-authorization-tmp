name: "CD: Apps"

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  registry: ghcr.io
  image_repository: altinn/altinn-authorization-tmp

jobs:
  find-verticals:
    uses: ./.github/workflows/_find-verticals.yml
    with:
      type: app

  build:
    name: Build
    needs: find-verticals
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix: ${{ fromJson(needs.find-verticals.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Set Short SHA
        run: |
          short_sha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$short_sha" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        name: Login to ${{ env.registry }}
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        id: build
        name: Build and Push
        with:
          file: ${{ matrix.path }}/Dockerfile
          context: ./
          push: true
          tags: ${{ env.registry }}/${{ env.image_repository }}/${{ matrix.imageName }}:${{ env.short_sha }}

  # read:
  #   name: Read Build Outputs
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   outputs:
  #     result: "${{ steps.read.outputs.result }}"
  #   steps:
  #     - name: Parse matrix result
  #       uses: cloudposse/github-action-matrix-outputs-read@v0
  #       id: read
  #       with:
  #         matrix-step-name: build

  # deploy:
  #   name: Deploy
  #   secrets: inherit
  #   needs:
  #     - read
  #     - find-verticals
  #   uses: ./.github/workflows/infra-cd-template.yml
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       name: ${{ fromJson(needs.bundle.outputs.dirs) }}
  #       environment: [at21]
  #   with:
  #     working_dir: src/apps/${{ matrix.name }}/deploy
  #     environment: ${{ matrix.environment }}
  #     tf_state: ${{ matrix.name }}.tfstate
  #     tf_args: -var image=${{ fromJson(needs.read.outputs.result).image[matrix.name] }}
