name: "Sonarcloud: Apps"

on:
  workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  find-verticals:
    uses: ./.github/workflows/_find-verticals.yml
    with:
      type: app

  check-slns:
    name: Check sln files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: |
            - cwd: .github/scripts
              args: [--frozen-lockfile]
            - args: [--global, tsx]

      - name: Update all sln files
        run: tsx ./.github/scripts/update-sln-files.mts

      - name: Assert that no sln files have changed
        run: git diff --exit-code

  build-and-test:
    name: Build and Test
    needs: find-verticals
    strategy:
      matrix: ${{ fromJson(needs.find-verticals.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Restore dotnet workloads
        working-directory: ${{ matrix.path }}
        run: dotnet workload restore

      - name: Build & Test
        working-directory: ${{ matrix.path }}
        run: |
          dotnet build -v m
          dotnet test --no-build -v m

  analyze:
    name: Analyze
    needs: find-verticals
    strategy:
      matrix: ${{ fromJson(needs.find-verticals.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Display working directory
        run: |
          echo "Working Directory: ${{ matrix.path }}"
          echo "Shortname: ${{ matrix.shortName }}"

      - name: Restore dotnet workloads
        working-directory: ${{ matrix.path }}
        run: dotnet workload restore

      - name: Install SonarCloud scanner
        working-directory: ${{ matrix.path }}
        shell: bash
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Analyze
        working-directory: ${{ matrix.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          dotnet tool install --global dotnet-coverage
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Authorization_${{ matrix.shortName }}" /o:"altinn" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.scanner.scanAll=false /d:sonar.coverage.exclusions="**/Migration/**" /d:sonar.exclusions="test/**/*" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.vscoveragexml.reportsPaths="TestResults/coverage.xml"

          dotnet build --no-incremental
          dotnet coverage collect 'dotnet test --no-build --results-directory TestResults/' -f xml -o 'TestResults/coverage.xml'

          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
