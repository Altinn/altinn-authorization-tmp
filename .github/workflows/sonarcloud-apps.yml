name: sonarcloud-apps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
    pull-requests: write

jobs:
  discover:
    name: Discover APIs
    runs-on: ubuntu-latest

    outputs:
      apis: ${{ steps.find-verticals.outputs.apis }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find APIs in the monorepo
        id: find-verticals
        run: |
          # Find all subdirectories directly under the "apps" folder
          if [ -d ./apps ]; then
            apis=$(find ./apps -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
            echo "Found APIs: $apis"
          else
            echo "No 'apps' directory found."
            apis=""
          fi

          # Save the API names as a comma-separated list
          echo "::set-output name=apis::$(echo $apis | tr '\n' ',')"
        shell: bash

  analyze:
    name: Analyze ${{ matrix.api }}
    needs: discover
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api: ${{ fromJson(needs.discover.outputs.apis) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run SonarCloud Analysis for API
        run: |
          cd ./src/apps/${{ matrix.api }}

          # Restore dependencies
          dotnet restore

          # Build the project
          dotnet build --no-restore --configuration Release

          # Run tests and collect code coverage
          dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

          # Convert coverage to SonarCloud format
          dotnet-reportgenerator-globaltool \
            -reports:"./TestResults/**/coverage.cobertura.xml" \
            -targetdir:"./TestResults/CoverageReport" \
            -reporttypes:SonarQube

          # Run SonarCloud scan
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION }}_${{ matrix.api }} \
            -Dsonar.sources=. \
            -Dsonar.coverageReportPaths="./TestResults/CoverageReport/SonarQube.xml" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
